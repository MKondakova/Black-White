[{"/Users/garinegorgmail.com/Downloads/gohackathon-base-client-instance-master/src/index.js":"1","/Users/garinegorgmail.com/Downloads/gohackathon-base-client-instance-master/src/App.js":"2","/Users/garinegorgmail.com/Downloads/gohackathon-base-client-instance-master/src/reportWebVitals.js":"3","/Users/garinegorgmail.com/Downloads/gohackathon-base-client-instance-master/src/routes.js":"4","/Users/garinegorgmail.com/Downloads/gohackathon-base-client-instance-master/src/store/index.js":"5","/Users/garinegorgmail.com/Downloads/gohackathon-base-client-instance-master/src/history.js":"6","/Users/garinegorgmail.com/Downloads/gohackathon-base-client-instance-master/src/constants/routes.js":"7","/Users/garinegorgmail.com/Downloads/gohackathon-base-client-instance-master/src/pages/Main/Main.js":"8","/Users/garinegorgmail.com/Downloads/gohackathon-base-client-instance-master/src/pages/Liders/Liders.js":"9","/Users/garinegorgmail.com/Downloads/gohackathon-base-client-instance-master/src/pages/Auth/components/Auth.js":"10","/Users/garinegorgmail.com/Downloads/gohackathon-base-client-instance-master/src/pages/Profile/Profile.js":"11","/Users/garinegorgmail.com/Downloads/gohackathon-base-client-instance-master/src/pages/GameBoard/GameBoard.js":"12","/Users/garinegorgmail.com/Downloads/gohackathon-base-client-instance-master/src/pages/Info/Info.js":"13","/Users/garinegorgmail.com/Downloads/gohackathon-base-client-instance-master/src/components/Routes/PrivateRoute/PrivateRoute.js":"14","/Users/garinegorgmail.com/Downloads/gohackathon-base-client-instance-master/src/components/Routes/LoginRoute/LoginRoute.js":"15","/Users/garinegorgmail.com/Downloads/gohackathon-base-client-instance-master/src/Socket.js":"16","/Users/garinegorgmail.com/Downloads/gohackathon-base-client-instance-master/src/store/sagas.js":"17","/Users/garinegorgmail.com/Downloads/gohackathon-base-client-instance-master/src/store/Board/reducers.js":"18","/Users/garinegorgmail.com/Downloads/gohackathon-base-client-instance-master/src/store/Profile/reducers.js":"19","/Users/garinegorgmail.com/Downloads/gohackathon-base-client-instance-master/src/store/Auth/reducers.js":"20","/Users/garinegorgmail.com/Downloads/gohackathon-base-client-instance-master/src/store/GameCreate/reducers.js":"21","/Users/garinegorgmail.com/Downloads/gohackathon-base-client-instance-master/src/store/Profile/actions.js":"22","/Users/garinegorgmail.com/Downloads/gohackathon-base-client-instance-master/src/store/GameCreate/actions.js":"23","/Users/garinegorgmail.com/Downloads/gohackathon-base-client-instance-master/src/store/Auth/actions.js":"24","/Users/garinegorgmail.com/Downloads/gohackathon-base-client-instance-master/src/store/Board/actions.js":"25","/Users/garinegorgmail.com/Downloads/gohackathon-base-client-instance-master/src/pages/GameBoard/components/Help/Help.js":"26","/Users/garinegorgmail.com/Downloads/gohackathon-base-client-instance-master/src/pages/GameBoard/components/Help/types.js":"27","/Users/garinegorgmail.com/Downloads/gohackathon-base-client-instance-master/src/pages/GameBoard/components/GameInfo/GameInfo.js":"28","/Users/garinegorgmail.com/Downloads/gohackathon-base-client-instance-master/src/pages/GameBoard/components/Board/Board.js":"29","/Users/garinegorgmail.com/Downloads/gohackathon-base-client-instance-master/src/helpers/session.js":"30","/Users/garinegorgmail.com/Downloads/gohackathon-base-client-instance-master/src/store/Board/saga.js":"31","/Users/garinegorgmail.com/Downloads/gohackathon-base-client-instance-master/src/store/Auth/saga.js":"32","/Users/garinegorgmail.com/Downloads/gohackathon-base-client-instance-master/src/store/GameCreate/saga.js":"33","/Users/garinegorgmail.com/Downloads/gohackathon-base-client-instance-master/src/store/Profile/saga.js":"34","/Users/garinegorgmail.com/Downloads/gohackathon-base-client-instance-master/src/store/Board/types.js":"35","/Users/garinegorgmail.com/Downloads/gohackathon-base-client-instance-master/src/store/Auth/types.js":"36","/Users/garinegorgmail.com/Downloads/gohackathon-base-client-instance-master/src/store/GameCreate/types.js":"37","/Users/garinegorgmail.com/Downloads/gohackathon-base-client-instance-master/src/store/Profile/types.js":"38","/Users/garinegorgmail.com/Downloads/gohackathon-base-client-instance-master/src/components/ButtonCustom/index.js":"39","/Users/garinegorgmail.com/Downloads/gohackathon-base-client-instance-master/src/components/InputCustom/index.js":"40","/Users/garinegorgmail.com/Downloads/gohackathon-base-client-instance-master/src/pages/Main/components/Header/index.js":"41","/Users/garinegorgmail.com/Downloads/gohackathon-base-client-instance-master/src/pages/Main/components/Content/index.js":"42","/Users/garinegorgmail.com/Downloads/gohackathon-base-client-instance-master/src/pages/GameBoard/components/Header/index.js":"43","/Users/garinegorgmail.com/Downloads/gohackathon-base-client-instance-master/src/pages/GameBoard/components/GameInfo/components/Players/Players.js":"44","/Users/garinegorgmail.com/Downloads/gohackathon-base-client-instance-master/src/pages/GameBoard/components/GameInfo/components/Info/Info.js":"45","/Users/garinegorgmail.com/Downloads/gohackathon-base-client-instance-master/src/api/board.js":"46","/Users/garinegorgmail.com/Downloads/gohackathon-base-client-instance-master/src/api/auth.js":"47","/Users/garinegorgmail.com/Downloads/gohackathon-base-client-instance-master/src/api/gameCreate.js":"48","/Users/garinegorgmail.com/Downloads/gohackathon-base-client-instance-master/src/api/profile.js":"49","/Users/garinegorgmail.com/Downloads/gohackathon-base-client-instance-master/src/pages/Main/components/Header/Header.js":"50","/Users/garinegorgmail.com/Downloads/gohackathon-base-client-instance-master/src/pages/Main/components/Content/Content.js":"51","/Users/garinegorgmail.com/Downloads/gohackathon-base-client-instance-master/src/pages/GameBoard/components/Header/Header.js":"52","/Users/garinegorgmail.com/Downloads/gohackathon-base-client-instance-master/src/api/base.js":"53","/Users/garinegorgmail.com/Downloads/gohackathon-base-client-instance-master/src/constants/env.js":"54","/Users/garinegorgmail.com/Downloads/gohackathon-base-client-instance-master/src/helpers/logger.js":"55","/Users/garinegorgmail.com/Downloads/gohackathon-base-client-instance-master/src/pages/Main/components/CodeContent/index.js":"56","/Users/garinegorgmail.com/Downloads/gohackathon-base-client-instance-master/src/pages/Main/components/Winner/index.js":"57","/Users/garinegorgmail.com/Downloads/gohackathon-base-client-instance-master/src/pages/Main/components/Error/index.js":"58","/Users/garinegorgmail.com/Downloads/gohackathon-base-client-instance-master/src/pages/Main/components/LoadingGame/index.js":"59","/Users/garinegorgmail.com/Downloads/gohackathon-base-client-instance-master/src/pages/Main/components/Connect/index.js":"60","/Users/garinegorgmail.com/Downloads/gohackathon-base-client-instance-master/src/pages/Main/components/CodeContent/CodeContent.js":"61","/Users/garinegorgmail.com/Downloads/gohackathon-base-client-instance-master/src/pages/Main/components/Winner/Winner.js":"62","/Users/garinegorgmail.com/Downloads/gohackathon-base-client-instance-master/src/pages/Main/components/Error/Error.js":"63","/Users/garinegorgmail.com/Downloads/gohackathon-base-client-instance-master/src/pages/Main/components/LoadingGame/LoadingGame.js":"64","/Users/garinegorgmail.com/Downloads/gohackathon-base-client-instance-master/src/pages/Main/components/Connect/Connect.js":"65"},{"size":288,"mtime":1619767103000,"results":"66","hashOfConfig":"67"},{"size":326,"mtime":1619767103000,"results":"68","hashOfConfig":"67"},{"size":362,"mtime":1619767103000,"results":"69","hashOfConfig":"67"},{"size":1192,"mtime":1619767103000,"results":"70","hashOfConfig":"67"},{"size":794,"mtime":1619767103000,"results":"71","hashOfConfig":"67"},{"size":111,"mtime":1619767103000,"results":"72","hashOfConfig":"67"},{"size":206,"mtime":1619767103000,"results":"73","hashOfConfig":"67"},{"size":1367,"mtime":1619767103000,"results":"74","hashOfConfig":"67"},{"size":3399,"mtime":1619767103000,"results":"75","hashOfConfig":"67"},{"size":3538,"mtime":1619767103000,"results":"76","hashOfConfig":"67"},{"size":6117,"mtime":1619767103000,"results":"77","hashOfConfig":"67"},{"size":10278,"mtime":1619767103000,"results":"78","hashOfConfig":"67"},{"size":20185,"mtime":1619767103000,"results":"79","hashOfConfig":"67"},{"size":589,"mtime":1619767103000,"results":"80","hashOfConfig":"67"},{"size":587,"mtime":1619767103000,"results":"81","hashOfConfig":"67"},{"size":388,"mtime":1619767103000,"results":"82","hashOfConfig":"67"},{"size":330,"mtime":1619767103000,"results":"83","hashOfConfig":"67"},{"size":2463,"mtime":1619767103000,"results":"84","hashOfConfig":"67"},{"size":614,"mtime":1619767103000,"results":"85","hashOfConfig":"67"},{"size":408,"mtime":1619767103000,"results":"86","hashOfConfig":"67"},{"size":1541,"mtime":1619767103000,"results":"87","hashOfConfig":"67"},{"size":464,"mtime":1619767103000,"results":"88","hashOfConfig":"67"},{"size":584,"mtime":1619767103000,"results":"89","hashOfConfig":"67"},{"size":267,"mtime":1619767103000,"results":"90","hashOfConfig":"67"},{"size":1517,"mtime":1619767103000,"results":"91","hashOfConfig":"67"},{"size":2526,"mtime":1619767103000,"results":"92","hashOfConfig":"67"},{"size":962,"mtime":1619767103000,"results":"93","hashOfConfig":"67"},{"size":648,"mtime":1619767103000,"results":"94","hashOfConfig":"67"},{"size":2738,"mtime":1619767103000,"results":"95","hashOfConfig":"67"},{"size":270,"mtime":1619767103000,"results":"96","hashOfConfig":"67"},{"size":2444,"mtime":1619767103000,"results":"97","hashOfConfig":"67"},{"size":1395,"mtime":1619767103000,"results":"98","hashOfConfig":"67"},{"size":3174,"mtime":1619767103000,"results":"99","hashOfConfig":"67"},{"size":1687,"mtime":1619767103000,"results":"100","hashOfConfig":"67"},{"size":759,"mtime":1619767103000,"results":"101","hashOfConfig":"67"},{"size":163,"mtime":1619767103000,"results":"102","hashOfConfig":"67"},{"size":849,"mtime":1619767103000,"results":"103","hashOfConfig":"67"},{"size":357,"mtime":1619767103000,"results":"104","hashOfConfig":"67"},{"size":1796,"mtime":1619767103000,"results":"105","hashOfConfig":"67"},{"size":2096,"mtime":1619767103000,"results":"106","hashOfConfig":"67"},{"size":25,"mtime":1619767103000,"results":"107","hashOfConfig":"67"},{"size":27,"mtime":1619767103000,"results":"108","hashOfConfig":"67"},{"size":25,"mtime":1619767103000,"results":"109","hashOfConfig":"67"},{"size":5889,"mtime":1619767103000,"results":"110","hashOfConfig":"67"},{"size":514,"mtime":1619767103000,"results":"111","hashOfConfig":"67"},{"size":941,"mtime":1619767103000,"results":"112","hashOfConfig":"67"},{"size":330,"mtime":1619767103000,"results":"113","hashOfConfig":"67"},{"size":593,"mtime":1619767103000,"results":"114","hashOfConfig":"67"},{"size":519,"mtime":1619767103000,"results":"115","hashOfConfig":"67"},{"size":3150,"mtime":1619767103000,"results":"116","hashOfConfig":"67"},{"size":3888,"mtime":1619767103000,"results":"117","hashOfConfig":"67"},{"size":2089,"mtime":1619767103000,"results":"118","hashOfConfig":"67"},{"size":3291,"mtime":1619767103000,"results":"119","hashOfConfig":"67"},{"size":107,"mtime":1619767103000,"results":"120","hashOfConfig":"67"},{"size":574,"mtime":1619767103000,"results":"121","hashOfConfig":"67"},{"size":30,"mtime":1619767103000,"results":"122","hashOfConfig":"67"},{"size":24,"mtime":1619767103000,"results":"123","hashOfConfig":"67"},{"size":23,"mtime":1619767103000,"results":"124","hashOfConfig":"67"},{"size":29,"mtime":1619767103000,"results":"125","hashOfConfig":"67"},{"size":26,"mtime":1619767103000,"results":"126","hashOfConfig":"67"},{"size":3145,"mtime":1619767103000,"results":"127","hashOfConfig":"67"},{"size":2862,"mtime":1619767103000,"results":"128","hashOfConfig":"67"},{"size":975,"mtime":1619767103000,"results":"129","hashOfConfig":"67"},{"size":2494,"mtime":1619767103000,"results":"130","hashOfConfig":"67"},{"size":1629,"mtime":1619767103000,"results":"131","hashOfConfig":"67"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1sij1hx",{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"146","messages":"147","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"154","messages":"155","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"170","messages":"171","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"172"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"177","messages":"178","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"179"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"182"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"191","messages":"192","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"193"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"196","messages":"197","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"198"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"203","messages":"204","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"205"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"208","messages":"209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"214","messages":"215","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"216","messages":"217","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"218","messages":"219","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"220","messages":"221","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"222","messages":"223","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"224","messages":"225","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"226","messages":"227","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"228","messages":"229","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"230"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"233"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"236","messages":"237","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"238","messages":"239","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"240","messages":"241","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"242","messages":"243","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"244"},{"filePath":"245","messages":"246","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"247"},{"filePath":"248","messages":"249","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"250"},{"filePath":"251","messages":"252","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"253"},{"filePath":"254","messages":"255","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"256","messages":"257","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"258"},{"filePath":"259","messages":"260","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"261","messages":"262","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"263","messages":"264","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"265","messages":"266","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"267","messages":"268","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"269","messages":"270","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"271"},{"filePath":"272","messages":"273","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"274"},{"filePath":"275","messages":"276","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"277","messages":"278","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"279"},{"filePath":"280","messages":"281","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"282"},"/Users/garinegorgmail.com/Downloads/gohackathon-base-client-instance-master/src/index.js",[],"/Users/garinegorgmail.com/Downloads/gohackathon-base-client-instance-master/src/App.js",[],"/Users/garinegorgmail.com/Downloads/gohackathon-base-client-instance-master/src/reportWebVitals.js",[],"/Users/garinegorgmail.com/Downloads/gohackathon-base-client-instance-master/src/routes.js",[],"/Users/garinegorgmail.com/Downloads/gohackathon-base-client-instance-master/src/store/index.js",[],"/Users/garinegorgmail.com/Downloads/gohackathon-base-client-instance-master/src/history.js",[],"/Users/garinegorgmail.com/Downloads/gohackathon-base-client-instance-master/src/constants/routes.js",[],"/Users/garinegorgmail.com/Downloads/gohackathon-base-client-instance-master/src/pages/Main/Main.js",["283"],"import React, { useState, useEffect } from \"react\";\nimport {useDispatch, useSelector} from 'react-redux'\nimport { Header } from \"./components/Header\";\nimport { Content } from \"./components/Content\";\nimport styled from \"styled-components\";\nimport { getProfile } from \"../../store/Profile/actions\";\nimport { getCurrentGame } from \"../../store/GameCreate/actions\";\n\nconst Wrapper = styled.div`\n  max-width: 1300px;\n  margin: 0 auto;\n  height: 100vh;\n  position: relative;\n  display: flex;\n  align-items: center;\n  padding-top: 170px;\n`;\n\nconst Main = ({ history, location }) => {\n  const [searchType, setSearchType] = useState(location.state?.from ? location.state.from : '');\n  const dispatch = useDispatch();\n  const playerInfo = useSelector((state) => state.profile.userProfile.user);\n\n  useEffect(() => {\n    dispatch(getProfile());\n    dispatch(getCurrentGame());\n  }, [])\n\n  if(!playerInfo) {\n    return null;\n  }\n\n  return (\n    <Wrapper>\n      <Header\n        history={history}\n        setSearchType={setSearchType}\n        searchType={searchType}\n        nickname={playerInfo.nickname}\n        pts={playerInfo.pts}\n        avatar={playerInfo.avatar}\n        winrate={playerInfo.winrate}\n      />\n      <Content\n        history={history}\n        searchType={searchType}\n        setSearchType={setSearchType}\n      />\n    </Wrapper>\n  );\n};\n\nexport default Main;\n","/Users/garinegorgmail.com/Downloads/gohackathon-base-client-instance-master/src/pages/Liders/Liders.js",["284"],"import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { Header } from \"../Main/components/Header\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getLiders } from \"../../store/Profile/actions\";\n\nconst Wrapper = styled.div`\n  max-width: 1300px;\n  margin: 0 auto;\n  height: 100vh;\n  position: relative;\n  display: flex;\n  align-items: flex-start;\n  padding-top: 200px;\n`;\n\nconst LidersCont = styled.div`\n  width: 100%;\n  max-height: 590px;\n  overflow-y: scroll;\n  display: flex;\n  flex-wrap: wrap;\n`;\n\nconst Lider = styled.div`\n  width: 50%;\n  display: flex;\n  margin-bottom: 30px;\n  align-items: center;\n  padding: 0 20px;\n`;\n\nconst LiderImg = styled.img`\n  width: 53px;\n  height: 53px;\n  border-radius: 50%;\n`;\nconst Name = styled.div`\n  width: 50%;\n  position: relative;\n  display: flex;\n  align-items: center;\n  :after{\n    content: '';\n    width: 100%;\n    height: 1px;\n    background: #C4C4C4;\n    position: absolute;\n    left: 0;\n    z-index: -1;\n  }\n`;\nconst SubName = styled.div`\n  width: auto;\n  font-weight: bold;\n  padding: 0 10px;\n  font-size: 20px;\n  background-color: #FFF;\n  z-index: 10;\n`;\nconst Rating = styled.div`\n  width: 30%;\n  font-size: 20px;\n  position: relative;\n  display: flex;\n  align-items: center;\n  :after{\n    content: '';\n    width: 100%;\n    height: 1px;\n    background: #000000;\n    position: absolute;\n    left: 0;\n    z-index: 0;\n  }\n`;\nconst Rate = styled.div`\n  width: auto;\n  color: #797979;\n  background-color: #FFF;\n  position: relative;\n  z-index: 10;\n  padding: 0 10px;\n`;\nconst Scores = styled.div`\n  width: 20%;\n  font-size: 22px;\n  padding-left: 10px;\n  display: flex;\n  align-items: center;\n`;\nconst Red = styled.div`\n  color: red;\n`;\nconst Green = styled.div`\n  color: green;\n`;\n\nexport const Liders = ({ history }) => {\n\n  const dispatch = useDispatch();\n  const [nickname, setNickname] = useState('')\n  const [list, setList] = useState([])\n  const liders = useSelector((state) => state.profile.liders);\n\n  useEffect(() => {\n    dispatch(getLiders())\n  }, [])\n\n  useEffect(() => {\n    if (nickname && (nickname !== '')) {\n      setList(liders.filter(item => item.nickname.indexOf(nickname) !== -1 || item.id.toString().indexOf(nickname) !== -1));\n    } else {\n      setList(liders)\n    }\n  }, [nickname, liders])\n\n  return (\n    <Wrapper>\n      <Header\n        history={history}\n        profile={true}\n        setSearchType={() => console.log()}\n        setNicknameFunc={(val) => setNickname(val)}\n      />\n      <LidersCont>\n        {\n          list.map((item, i) => {\n            return (\n              <Lider key={i}>\n                <LiderImg src={item.avatar} />\n                <Name>\n                  <SubName>\n                    {item.id} - {item.nickname}\n                  </SubName>\n                </Name>\n                <Rating>\n                  <Rate>\n                    {item.pts}pts / {item?.position}th\n                  </Rate>\n                </Rating>\n                <Scores>\n                  <Red>\n                    {item.winrate.split('/')[0]}\n                  </Red>\n                  &nbsp;/&nbsp;\n                  <Green>\n                    {item.winrate.split('/')[1]}\n                  </Green>\n                </Scores>\n              </Lider>\n            )\n          })\n        }\n      </LidersCont>\n    </Wrapper>\n  );\n};\n\nexport default Liders;\n","/Users/garinegorgmail.com/Downloads/gohackathon-base-client-instance-master/src/pages/Auth/components/Auth.js",[],"/Users/garinegorgmail.com/Downloads/gohackathon-base-client-instance-master/src/pages/Profile/Profile.js",["285"],"import React, { useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport styled from \"styled-components\";\nimport { ButtonCustom } from \"../../components/ButtonCustom\";\nimport { Input } from \"../../components/InputCustom\";\nimport { MAIN_URL } from \"../../constants/routes\";\nimport { getProfile, getSgf, getFullLog } from \"../../store/Profile/actions\";\n\nconst Wrapper = styled.div`\n  height: 100vh;\n  position: relative;\n  justify-content: space-between;\n  flex-direction: column;\n  display: flex;\n  align-items: center;\n  width: 100%;\n  padding: 100px 0;\n`;\nconst Info = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  max-width: 635px;\n  width: 100%;\n  margin-bottom: 70px;\n`;\nconst InfoPlayer = styled.div``;\n\nconst Left = styled.div`\n  display: flex;\n  align-items: center;\n`;\n\nconst Right = styled.div`\n  display: flex;\n  align-items: center;\n`;\n\nconst GameHistory = styled.div`\n  height: auto;\n  min-height: 200px;\n  overflow: hidden;\n  overflow-y: scroll;\n  max-width: 635px;\n  width: 100%;\n  margin-bottom: 70px;\n`;\n\nconst Avatar = styled.img`\n  border-radius: 100px;\n  width: 200px;\n`;\nconst Name = styled.p`\n  font-weight: bold;\n  font-size: 24px;\n  line-height: 28px;\n`;\nconst Pts = styled.p`\n  color: #c8d7b5;\n  font-size: 12px;\n  line-height: 14px;\n`;\nconst Span = styled.p`\n  font-weight: bold;\n  font-size: 24px;\n  line-height: 28px;\n  color: ${(props) => (props.winner ? \"#C8D7B5\" : \"#B69094\")};\n`;\nconst ScoreLeft = styled.p`\n  font-size: 24px;\n  line-height: 28px;\n  font-weight: bold;\n  color: ${(props) => (props.winner ? \"#C8D7B5\" : \"#DD3F65\")};\n  margin-right: 5px;\n`;\nconst ScoreRight = styled.p`\n  font-size: 24px;\n  line-height: 28px;\n  font-weight: bold;\n  color: ${(props) => (props.winner ? \"#86C13A\" : \"#B69094\")};\n  margin-left: 5px;\n  margin-right: 16px;\n`;\nconst AvatarHistory = styled.img`\n  width: 90px;\n  margin-right: 15px;\n`;\n\nconst ButtonDownloadFile = styled.div`\n  width: 90px;\n  font-weight: 400;\n  text-align: center;\n  font-family: \"Roboto\",sans-serif;\n  padding: 0;\n  height: 20px;\n  display: block;\n  outline: none;\n  -webkit-flex-shrink: 0;\n  -ms-flex-negative: 0;\n  flex-shrink: 0;\n  background-color: #FFE3BA;\n  color: #000;\n  cursor: pointer;\n  font-size: 18px;\n  border: none;\n  :first-child {\n    margin-bottom: 15px;\n  }\n`;\n\nconst ButtonRow = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nconst GameHistoryItem = styled.div`\n  height: 117px;\n  width: 100%;\n  background: ${(props) => (props.winner ? \"#efffda\" : \"#FFDADE\")};\n  margin-bottom: 10px;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 10px;\n`;\n\nconst InfoHistory = styled.div``;\n\nconst TriangleLeft = styled.div`\n  border: 20px solid transparent;\n  border-right: 20px solid ${(props) => (props.winner ? \"#C8D7B5\" : \"#DD3F65\")};\n  margin-right: 16px;\n`;\nconst TriangleRight = styled.div`\n  border: 20px solid transparent;\n  border-left: 20px solid ${(props) => (props.winner ? \"#86C13A\" : \"#B69094\")};\n  margin-right: 16px;\n`;\n\nconst Profile = ({ history }) => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(getProfile());\n  }, []);\n\n  const playerInfo = useSelector((state) => state.profile.userProfile.user);\n\n  const gameHistoryItems =\n    playerInfo?.games_history.map((item, i) => {\n      return item.scoreOpponent <= item.score ? (\n          <GameHistoryItem key={i} winner>\n            <Left>\n              <AvatarHistory alt=\"avatar\" src={item.player.avatar} />\n              <InfoHistory>\n                <Name>{item.player.nickname}</Name>\n                <Pts>{item.player.pts} / {item.player.position+'th'}</Pts>\n              </InfoHistory>\n            </Left>\n            <Right>\n              <TriangleLeft winner />\n              <ScoreLeft winner>{item.scoreOpponent}</ScoreLeft>\n              <Span winner>/</Span>\n              <ScoreRight winner>{item.score}</ScoreRight>\n              <TriangleRight winner />\n            </Right>\n            <ButtonRow>\n              <ButtonDownloadFile onClick={()=>dispatch(getSgf(item.game_id))}>\n                Файл\n              </ButtonDownloadFile>\n              <ButtonDownloadFile onClick={()=>dispatch(getFullLog(item.game_id))}>\n                Лог\n              </ButtonDownloadFile>\n            </ButtonRow>\n          </GameHistoryItem>) : (\n          <GameHistoryItem key={i}>\n            <Left>\n              <AvatarHistory alt=\"avatar\" src={item.player.avatar} />\n              <InfoHistory>\n                <Name>{item.player.nickname}</Name>\n                <Pts>{item.player.pts} / {item.player.position+'th'}</Pts>\n              </InfoHistory>\n            </Left>\n            <Right>\n              <TriangleLeft />\n              <ScoreLeft>{item.scoreOpponent}</ScoreLeft>\n              <Span>/</Span>\n              <ScoreRight>{item.score}</ScoreRight>\n              <TriangleRight/>\n            </Right>\n            <ButtonRow>\n              <ButtonDownloadFile onClick={()=>dispatch(getSgf(item.game_id))}>\n                Файл\n              </ButtonDownloadFile>\n              <ButtonDownloadFile onClick={()=>dispatch(getFullLog(item.game_id))}>\n                Лог\n              </ButtonDownloadFile>\n            </ButtonRow>\n          </GameHistoryItem>\n      )\n    });\n\n  return (\n    <Wrapper>\n      <Info>\n        <Avatar alt=\"avatar\" src={playerInfo?.avatar} />\n        <InfoPlayer>\n          <Input\n            mb={10}\n            textAlign=\"center\"\n            disabled\n            value={playerInfo?.nickname}\n          />\n          <Input\n            mb={10}\n            textAlign=\"center\"\n            disabled\n            value={playerInfo?.email}\n          />\n          <Input mb={10} textAlign=\"center\" disabled value={playerInfo?.pts} />\n        </InfoPlayer>\n      </Info>\n      <GameHistory>\n        {gameHistoryItems}\n      </GameHistory>\n      <ButtonCustom\n        width=\"400px\"\n        onClick={() => {\n          history.push(MAIN_URL);\n        }}\n      >\n        В меню\n      </ButtonCustom>\n    </Wrapper>\n  );\n};\n\nexport default Profile;\n","/Users/garinegorgmail.com/Downloads/gohackathon-base-client-instance-master/src/pages/GameBoard/GameBoard.js",["286","287","288","289","290"],"import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Board from \"./components/Board/Board\";\nimport GameInfo from \"./components/GameInfo/GameInfo\";\nimport styled from \"styled-components\";\nimport { Header } from \"./components/Header\";\nimport Help from \"./components/Help/Help\";\nimport {\n  hintHeatmapFull,\n  hintHeatmapZone,\n  markersClear,\n  multipleHelp,\n  setWinnerUser,\n  setLoserUser,\n  setBlocked,\n  hintShowBest,\n  setScoresWinner,\n  hintBestMoves,\n} from \"../../store/Board/actions\";\n\nimport { clearGameId } from \"../../store/GameCreate/actions\";\n\nimport { client, token } from '../../Socket.js'\nimport {\n  HEATMAP_FULL,\n  HEATMAP_ZONE_QUARTER,\n} from \"./components/Help/types\";\n\nconst Wrapper = styled.div`\n  max-width: 1377px;\n  margin: 0 auto;\n`;\nconst Flex = styled.div`\n  display: flex;\n  justify-content: space-between;\n  width: 100%;\n  align-items: stretch;\n  height: calc(100vh - 129px);\n`;\nconst Wrap = styled.div`\n  width: 100%;\n  height: 100%;\n  position: absolute;\n  left: 0;\n  top: 0;\n  background-color: rgba(255,255,255,0.5);\n  z-index: 99999999;\n`;\n\nconst GameBoard = ({ history }) => {\n\n  const game_id = useSelector((state) => state.createGame.id);\n  const blocked = useSelector((state) => state.board.blocked);\n  const mapStones = useSelector((state) => state.board.mapStones);\n\n  const [hint, setHint] = useState(false);\n  const [enemyPass, setEnemyPass] = useState(false);\n  const [lastMarkers, setLastMarkers] = useState(null);\n  const [helpType, setHelpType] = useState('');\n  const [activeHelpId, setActiveHelpId] = useState('');\n  const [multipleType, setMultipleType] = useState(false);\n  const [mapType, setMapType] = useState(false);\n  const [multipleHint, setMultipleHint] = useState({});\n  const [multipleCount, setMultipleCount] = useState([]);\n  const [turns, setTurns] = useState([]);\n  const [yourColor, setYourColor] = useState(\"white\");\n  const [coordinates, setCoordinates] = useState({});\n  const [you, setYou] = useState({});\n  const [opponent, setOpponent] = useState({});\n  const [stepMain, setStepMain] = useState(0)\n  const [stepTwo, setStepTwo] = useState(0)\n  const [stepColor, setStepColor] = useState('white')\n  const [classNames, setClassNames] = useState({})\n  const dispatch = useDispatch();\n  const [times, setTimes] = useState({playerOne: 0, playerTwo: 0})\n  \n\n  useEffect(() => {\n    if (Object.keys(multipleHint).length === multipleCount) {\n      dispatch(multipleHelp());\n      deleteCoordinates(multipleHint);\n      setHelpType('');\n      setMultipleHint({});\n    }\n  }, [multipleHint, multipleCount]);\n\n  if (game_id === null) {\n    history.push('/')\n  }\n\n  useEffect(() => {\n    if (game_id) {\n      client.send(JSON.stringify([5, 'go/game']));\n      client.send(JSON.stringify([7, \"go/game\", {command: \"auth\", token: localStorage.getItem('GoGameToken'), game_id: game_id}]));\n    }\n  },[])\n\n  client.onmessage = function(e) {\n    setEnemyPass(false)\n    if (typeof e.data === 'string') {\n      let jsonData = JSON.parse(e.data);\n      if (jsonData.payload) {\n        if (jsonData.payload.currentMap) {\n          setCoordinates(mapMap(jsonData.payload.currentMap))\n        }\n        if (jsonData.payload.type === \"currentMap\") {\n          setYou(jsonData.payload.you)\n          setOpponent(jsonData.payload.opponent)\n        }\n        if (jsonData.payload.player) {\n          if(typeof jsonData.payload.player === 'string') {\n            setYourColor(jsonData.payload.player === 'w' ? 'white' : 'black')\n          }\n        }\n        if (jsonData.payload.type && (jsonData.payload.type === 'endGame')) {\n          let winner = jsonData.payload.winnerPlayer\n          let loser = jsonData.payload.loserPlayer\n          winner.finalScore = jsonData.payload.finalScore;\n          dispatch(setWinnerUser(winner))\n          dispatch(setLoserUser(loser))\n          history.push('/', { from: \"Win\" })\n          dispatch(clearGameId())\n        }\n        if (jsonData.payload.turn) {\n          setStepColor(jsonData.payload.turn)\n        }\n        if (jsonData.payload.move) {\n          setTurns(turns => [...turns, timeConverter(jsonData.time)+': '+jsonData.payload.move])\n        }\n        if (jsonData.payload.type === 'newTurn') {\n          setLastMarkers({[jsonData.payload.place]:'circle'})\n        }\n        if (jsonData.payload.moveType === 'pass') {\n          if (stepColor !== yourColor) {\n            setEnemyPass(true)\n          }\n        }\n        if (jsonData.payload.turnBlackEndedAt && jsonData.payload.turnWhiteEndedAt) {\n          setTimes({\n            playerOne: Math.floor((Number(jsonData.payload.turnBlackEndedAt)  - new Date().getTime()) / 1000),\n            playerTwo: Math.floor((Number(jsonData.payload.turnWhiteEndedAt)  - new Date().getTime()) / 1000)\n          })\n        }\n      }\n    }\n    dispatch(setBlocked(false))\n  };\n\n  const mapMap = (map) => {\n    let coords = {};\n    let alpha = 'ABCDEFGHJKLMNOPQRSTUV'\n    map.map((row, rowId) => row.map((cell, colId) => {\n      if(cell !== 0)\n      {\n        let sign = alpha[rowId];\n        coords[`${sign}${(colId + 1)}`] = cell === -1 ? 'white' : 'black';\n      }\n    }))\n    let steMainTemp = 0\n    let stepTwoTemp = 0\n    Object.keys(coords).forEach((key) => {\n      if (String(yourColor) === String(coords[key])) {\n        steMainTemp += 1\n      } else {\n        stepTwoTemp += 1\n      }\n    })\n    setStepMain(steMainTemp)\n    setStepTwo(stepTwoTemp)\n    return coords;\n  }\n\n  const move = (coord) => {\n    if (stepColor === yourColor) {\n      dispatch(markersClear());\n      setActiveHelpId(null);\n      setHelpType('')\n      dispatch(setBlocked(true))\n      client.send(JSON.stringify([7, \"go/game\", {command: \"move\", token: token, place: coord.toString().toLowerCase(), game_id: game_id}]));\n    }\n  }\n\n  const pass = () => {\n    dispatch(markersClear());\n    setActiveHelpId(null);\n    setHelpType('')\n    dispatch(setBlocked(true))\n    client.send(JSON.stringify([7, \"go/game\", {command: \"pass\", token: token, game_id: game_id}]));\n  }\n\n  const resign = () => {\n    dispatch(setBlocked(true))\n    client.send(JSON.stringify([7, \"go/game\", {command: \"resign\", token: token, game_id: game_id}]));\n  }\n\n  const handleHelp = ({type, multipleHandleCount, id, count} ) => {\n    dispatch(markersClear());\n    setMultipleHint({});\n    setActiveHelpId(id);\n    if (type === \"single\") {\n      dispatch(setBlocked(true))\n      setHelpType(\"single\");\n      dispatch(hintBestMoves(game_id, count));\n    }\n    if (type === \"multiple\") {\n      setHelpType(\"multiple\");\n      setMultipleType(\"multiple\");\n      setMultipleCount(multipleHandleCount);\n    }\n    if (type === \"map\") {\n      dispatch(setBlocked(true))\n      setHelpType(\"map\");\n      setMapType(\"map\");\n      switch (id)\n      {\n        case HEATMAP_FULL:\n          dispatch(hintHeatmapFull(game_id));\n          break;\n        case HEATMAP_ZONE_QUARTER:\n          dispatch(hintHeatmapZone(game_id, true));\n          break;\n      }\n    }\n    if (type === \"score\") {\n      dispatch(setBlocked(true))\n      dispatch(setScoresWinner(game_id))\n    }\n  };\n\n  const deleteCoordinates = (hints) => {\n    for (const key in coordinates) {\n      for (const keyHint in hints) {\n        if(key === keyHint) {\n          delete coordinates[key];\n        }\n      }\n    }\n  }\n\n  const timeConverter = (UNIX_timestamp) => {\n    let a = new Date(UNIX_timestamp);\n    let year = a.getFullYear().toString().substr(-2);\n    let month = ('0' + (a.getMonth()+1)).slice(-2);\n    let date = ('0' + a.getDate()).slice(-2);\n    let hour = ('0' + a.getHours()).slice(-2);\n    let min = ('0' + a.getMinutes()).slice(-2);\n    let time = `${date}/${month}/${year} ${hour}:${min}`;\n    return time;\n  }\n\n  const setMultipleHintFunc = (val) => {\n    if (Object.keys(mapStones).length === (multipleCount - 2)) {\n      dispatch(markersClear());\n      setActiveHelpId(null);\n      setMultipleHint({})\n      setHelpType('');\n      dispatch(setBlocked(true))\n      dispatch(hintShowBest(game_id, Object.keys({...mapStones, [val]: 'circle'})))\n    } else {\n      setMultipleHint(mapStones)\n    }\n  }\n\n  return (\n    <Wrapper>\n      <Header\n        hint={hint}\n        setPass={pass}\n        viewPass={Object.keys(coordinates).length > 0}\n        history={history}\n        setHint={(e) => setHint(e)}\n        setResign={resign}\n        helpType={helpType}\n        gameId={game_id}\n        view={stepColor === yourColor}\n        timeOut={() => alert('End Time')}\n        timer={stepColor === yourColor}\n      />\n      <Flex>\n        {blocked && (\n          <Wrap />\n        )}\n        <Board\n          lastMarkers={lastMarkers}\n          hint={hint}\n          setHint={setHint}\n          currentColor={stepColor}\n          setCurrentColor={setStepColor}\n          yourColor={yourColor}\n          helpType={helpType}\n          setMultipleHint={(val) => setMultipleHintFunc(val)}\n          multipleHint={multipleHint}\n          multipleCount={multipleCount}\n          coordinates={coordinates}\n          setStonePosition={move}\n          setHelpType={setHelpType}\n          setMapType={setMapType}\n          setMultipleType={setMultipleType}\n          setActiveHelpId={setActiveHelpId}\n          classNames={classNames}\n          mapStones={mapStones}\n        />\n        {!hint ? (\n          <GameInfo\n            you={you}\n            opponent={opponent}\n            stepColor={stepColor}\n            yourColor={yourColor}\n            turns={turns}\n            enemyPass={enemyPass}\n            stepMain={stepMain}\n            times={times}\n            stepTwo={stepTwo} />\n        ) : (\n          <Help\n            you={you}\n            opponent={opponent}\n            stepColor={stepColor}\n            yourColor={yourColor}\n            turns={turns}\n            enemyPass={enemyPass}\n            stepMain={stepMain}\n            stepTwo={stepTwo}\n            currentColor={yourColor}\n            setHint={setHint}\n            handleHelp={handleHelp}\n            helpType={helpType}\n            multipleType={multipleType}\n            mapType={mapType}\n            activeHelpId={activeHelpId}\n            times={times}\n            scores={stepColor !== yourColor ? false : true}\n          />\n        )}\n      </Flex>\n    </Wrapper>\n  );\n};\n\nexport default GameBoard;\n","/Users/garinegorgmail.com/Downloads/gohackathon-base-client-instance-master/src/pages/Info/Info.js",[],"/Users/garinegorgmail.com/Downloads/gohackathon-base-client-instance-master/src/components/Routes/PrivateRoute/PrivateRoute.js",[],"/Users/garinegorgmail.com/Downloads/gohackathon-base-client-instance-master/src/components/Routes/LoginRoute/LoginRoute.js",[],"/Users/garinegorgmail.com/Downloads/gohackathon-base-client-instance-master/src/Socket.js",[],"/Users/garinegorgmail.com/Downloads/gohackathon-base-client-instance-master/src/store/sagas.js",[],"/Users/garinegorgmail.com/Downloads/gohackathon-base-client-instance-master/src/store/Board/reducers.js",["291","292","293","294"],"import {\n  SINGLE_HELP,\n  MARKERS_CLEAR,\n  MULTIPLE_HELP,\n  MAP_HELP,\n  WINNER_USER,\n  LOSER_USER,\n  SET_BLOCKED,\n  MAP_STONES,\n  SCORES,\n  SCORES_WINNER } from \"./types\";\nimport { MAP_HALF, MAP_QUARTERS } from \"../../pages/GameBoard/components/Help/types\";\n\nconst initialState = {\n  markers: {},\n  classNamesMapStones: {},\n  mapStones: {},\n  winner: null,\n  loser: null,\n  blocked: false,\n  scores: null,\n  scoresWinner: null\n};\n\nexport const boardReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case SINGLE_HELP:\n      return {\n        ...state,\n        markers: action.payload,\n        blocked: false\n      };\n    case SET_BLOCKED:\n      return {\n        ...state,\n        blocked: action.payload\n      };\n    case MULTIPLE_HELP:\n      return {\n        ...state,\n        markers: {},\n        blocked: false\n      };\n    case MARKERS_CLEAR:\n      return {\n        ...state,\n        markers: {},\n        mapStones: {},\n        classNamesMapStones: {},\n        scores: null,\n        scoresWinner: null\n      };\n    case MAP_STONES:\n      return {\n        ...state,\n        mapStones: action.payload,\n        blocked: false\n      };\n    case MAP_HELP:\n\n      if (action.payload.zone) {\n        var {\n          mapStones,\n          classNamesMapStones\n        } = action.payload.isQuarter ? MAP_QUARTERS[action.payload.zone] : MAP_HALF[action.payload.zone];\n      } else {\n        var mapStones = {};\n        var classNamesMapStones = {};\n        let alpha = 'ABCDEFGHJKLMNOPQRSTUV'\n        action.payload.map((row, rowId) => {\n          row.map((cell, colId) => {\n            if (parseInt(cell) !== 0) {\n              let sign = alpha[rowId];\n              let coord = `${sign}${(colId + 1)}`;\n              mapStones[coord] = \"circle\"\n              classNamesMapStones[coord] = `redstone size-${cell}`\n            }\n          })\n        })\n      }\n\n      return {\n        ...state,\n        mapStones,\n        classNamesMapStones,\n        blocked: false\n      };\n    case WINNER_USER:\n      return {\n        ...state,\n        winner: action.payload\n      };\n    case LOSER_USER:\n      return {\n        ...state,\n        loser: action.payload\n      };\n    case SCORES:\n      return {\n        ...state,\n        scores: action.payload,\n        blocked: false\n      };\n    case SCORES_WINNER:\n      return {\n        ...state,\n        scoresWinner: action.payload,\n        blocked: false\n      };\n    default:\n      return {...state};\n  }\n};\n","/Users/garinegorgmail.com/Downloads/gohackathon-base-client-instance-master/src/store/Profile/reducers.js",[],"/Users/garinegorgmail.com/Downloads/gohackathon-base-client-instance-master/src/store/Auth/reducers.js",[],"/Users/garinegorgmail.com/Downloads/gohackathon-base-client-instance-master/src/store/GameCreate/reducers.js",["295"],"import {\n  CREATE_GAME_SUCCESS, CREATE_GAME_ERROR,\n  JOIN_GAME_WITH_CODE_SUCCESS, JOIN_GAME_WITH_CODE_ERROR,\n  CREATE_RANDOM_GAME_SUCCESS, CREATE_RANDOM_GAME_ERROR,\n  CREATE_GAME_WITH_AI_SUCCESS, CREATE_GAME_WITH_AI_ERROR,\n  JOIN_GAME_WITH_CODE, CLEAR_GAME } from \"./types\";\n\nconst initialState = {\n  code: '',\n  id: null,\n  gameId: null,\n  message: '',\n  error: null,\n};\n\nexport const createGameReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case CREATE_GAME_SUCCESS:\n      return {\n        ...state,\n        code: action.payload.code,\n        id: action.payload.gameId,\n      };\n    case CREATE_GAME_ERROR:\n      return {\n        ...state,\n        error: action.error,\n      };\n    case JOIN_GAME_WITH_CODE_SUCCESS:\n      return {\n        ...state,\n        id: action.payload,\n      };\n    case JOIN_GAME_WITH_CODE_ERROR:\n      return {\n        ...state,\n        error: action.error,\n      };\n    case CREATE_RANDOM_GAME_SUCCESS:\n      return {\n        ...state,\n        id: action.payload,\n      };\n    case CREATE_RANDOM_GAME_ERROR:\n      return {\n        ...state,\n        error: action.error,\n      };\n    case CREATE_GAME_WITH_AI_SUCCESS:\n      return {\n        ...state,\n        id: action.payload,\n      };\n    case CREATE_GAME_WITH_AI_ERROR:\n      return {\n        ...state,\n        error: action.error,\n      };\n    case CLEAR_GAME:\n      return {\n        ...state,\n        id: null,\n        code: null,\n        message: null,\n        error: null\n      }\n    default:\n      return { ...state };\n  }\n};\n","/Users/garinegorgmail.com/Downloads/gohackathon-base-client-instance-master/src/store/Profile/actions.js",["296"],"import { GET_PROFILE, GET_PROFILE_BY_ID, SET_LIDERS, GET_SGF, GET_FULL_LOG, GET_LIDERS } from \"./types\";\n\nexport const getProfile = () => ({\n  type: GET_PROFILE,\n});\n\nexport const getProfileById = (id) => ({\n  type: GET_PROFILE_BY_ID,\n  payload: {id}\n});\n\nexport const getSgf = (id) => ({\n  type: GET_SGF,\n  payload: {id}\n});\n\nexport const getFullLog = (id) => ({\n  type: GET_FULL_LOG,\n  payload: {id}\n});\n\nexport const getLiders = () => ({\n  type: GET_LIDERS\n});\n","/Users/garinegorgmail.com/Downloads/gohackathon-base-client-instance-master/src/store/GameCreate/actions.js",[],"/Users/garinegorgmail.com/Downloads/gohackathon-base-client-instance-master/src/store/Auth/actions.js",[],"/Users/garinegorgmail.com/Downloads/gohackathon-base-client-instance-master/src/store/Board/actions.js",[],"/Users/garinegorgmail.com/Downloads/gohackathon-base-client-instance-master/src/pages/GameBoard/components/Help/Help.js",[],"/Users/garinegorgmail.com/Downloads/gohackathon-base-client-instance-master/src/pages/GameBoard/components/Help/types.js",["297","298"],"export const HEATMAP_FULL = 13;\nexport const HEATMAP_ZONE_QUARTER = 23\n\nconst defaultMapClass = 'redstone';\nconst defaultMapSize = 'size-70';\n\n\nconst getZone = (rangeAlpha, digitRange, type = 'circle', color = defaultMapClass, size = defaultMapSize) =>\n{\n  let mapStones = {}\n  let classNamesMapStones = {}\n  let alpha = rangeAlpha.toUpperCase().split('')\n  let digits = digitRange.split(',')\n\n  alpha.map((char) => {\n    digits.map((digit) => {\n      mapStones[`${char}${digit}`] = type\n      classNamesMapStones[`${char}${digit}`] = `${size} ${color}`\n    })\n  })\n\n  return {mapStones, classNamesMapStones};\n}\nexport const MAP_QUARTERS = {\n  '1': getZone('GHJKLMN', '7,8,9,10,11,12,13'),\n  '2': getZone('ABCDEFG', '7,8,9,10,11,12,13'),\n  '3': getZone('ABCDEFG', '1,2,3,4,5,6,7'),\n  '4': getZone('GHJKLMN', '1,2,3,4,5,6,7'),\n}\n\nexport const MAP_HALF = {\n  '1': getZone('ABCDEFGGHJKLMN', '7,8,9,10,11,12,13'),\n  '2': getZone('ABCDEFGGHJKLMN', '1,2,3,4,5,6,7'),\n}","/Users/garinegorgmail.com/Downloads/gohackathon-base-client-instance-master/src/pages/GameBoard/components/GameInfo/GameInfo.js",[],"/Users/garinegorgmail.com/Downloads/gohackathon-base-client-instance-master/src/pages/GameBoard/components/Board/Board.js",["299"],"import React, {useState} from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Goban } from \"react-goban\";\nimport styled from \"styled-components\";\nimport { markersClear, setMapStones } from \"../../../../store/Board/actions\";\nimport { client } from \"../../../../Socket\";\n\nconst Wrapper = styled.div`\n  width: 50%;\n  position: relative;\n  & > div {\n    position: absolute;\n    top: 0;\n    right: 0;\n    left: 0;\n  }\n  & svg {\n    width: 100%;\n    height: 100%;\n  }\n`;\n\nconst Board = ({\n  lastMarkers,\n  socket,\n  setHint,\n  currentColor,\n  setCurrentColor,\n  yourColor,\n  helpType,\n  setMultipleHint,\n  multipleHint,\n  coordinates,\n  setCoordinates,\n  setHelpType,\n  setMultipleType,\n  setActiveHelpId,\n  setMapType,\n  setStonePosition,\n  classNames,\n  mapStones\n}) => {\n  const dispatch = useDispatch();\n  const markers = useSelector((state) => state.board.markers);\n  const classNamesMapStones = useSelector(\n    (state) => state.board.classNamesMapStones\n  );\n\n  const handleTurn = (stonePosition) => {\n    client.send(JSON.stringify([7, \"go/game\", {command: \"move\", token: \"1cfc52aacaba0507e66d74cd878020f071457220\", place: stonePosition.toString().toLowerCase(), game_id: 8}]));\n    let valid = true;\n    for (const key in coordinates) {\n      if (key === stonePosition) {\n        valid = false;\n      }\n    }\n    if (valid && currentColor === yourColor) {\n      setStonePosition(stonePosition)\n      //setCoordinates({ ...coordinates, [stonePosition]: currentColor });\n      setCurrentColor(currentColor === \"white\" ? \"black\" : \"white\");\n      setHint(false);\n      dispatch(markersClear());\n      setHelpType(\"\");\n      setActiveHelpId(\"\");\n      setMultipleType(false);\n      setMapType(false);\n    }\n  };\n\n  const handleMultipleTurn = (stonePosition) => {\n    let valid = true;\n    for (const key in coordinates) {\n      if (key === stonePosition) {\n        valid = false;\n      }\n    }\n    if (valid) {\n      dispatch(setMapStones({ ...mapStones, [stonePosition]: 'circle' }))\n      setMultipleHint(stonePosition);\n      //setCoordinates({ ...coordinates, [stonePosition]: currentColor });\n    }\n  };\n\n  let className;\n  if (currentColor !== yourColor) {\n    className = 'disabled'\n  } else {\n    className = ''\n  }\n\n  return (\n    <Wrapper className={className}>\n        <Goban\n          style={{ position: \"absolute\" }}\n          stones={coordinates}\n          markers={markers}\n          lastMarkers={lastMarkers}\n          mapStones={mapStones}\n          classNamesMapStones={classNamesMapStones}\n          onIntersectionClick={\n            helpType !== \"multiple\" ? handleTurn : handleMultipleTurn\n          }\n          nextToPlay={yourColor}\n        />\n    </Wrapper>\n  );\n};\n\nexport default Board;\n","/Users/garinegorgmail.com/Downloads/gohackathon-base-client-instance-master/src/helpers/session.js",[],"/Users/garinegorgmail.com/Downloads/gohackathon-base-client-instance-master/src/store/Board/saga.js",[],"/Users/garinegorgmail.com/Downloads/gohackathon-base-client-instance-master/src/store/Auth/saga.js",["300"],"import {all, takeLatest, call, put} from 'redux-saga/effects';\nimport {registration,login} from \"../../api/auth\";\nimport { setToken } from '../../helpers/session';\nimport { REG_SUBMIT, REG_ERROR, LOGIN_ERROR,LOGIN_SUBMIT } from \"./types\";\nimport history from '../../history'\n\nfunction* fetchReg_saga(action) {\n  const {payload} = action;\n  try {\n    yield put({ type: REG_ERROR, error: {}});\n    const res = yield call(registration, payload.nickname, payload.email)\n    if(res.errors) {\n      yield put({ type:REG_ERROR, error: res.errors})\n    }\n    if(res.token) {\n      yield put({ type: REG_ERROR, error: {}});\n      setToken(res.token);\n      window.location.assign('/')\n    }\n  } catch (e) {\n    yield put({type: REG_ERROR, error: e});\n    //throw e;\n  }\n}\n\nfunction* fetchLogin_saga(action) {\n  const {payload} = action;\n  try {\n    yield put({ type: LOGIN_ERROR, error: {}});\n    const res = yield call(login, payload.password, payload.email)\n    if(res.errors) {\n      yield put({ type:LOGIN_ERROR, error: res.errors})\n    }\n    if(res.token) {\n      yield put({ type: LOGIN_ERROR, error: {}});\n      setToken(res.token);\n      window.location.assign('/')\n    }\n  } catch (e) {\n    yield put({type: LOGIN_ERROR, error: e});\n    //throw e;\n  }\n}\n\nexport function* authSaga() {\n  yield all([\n    takeLatest(REG_SUBMIT, fetchReg_saga),\n    takeLatest(LOGIN_SUBMIT, fetchLogin_saga)\n  ])\n}\n","/Users/garinegorgmail.com/Downloads/gohackathon-base-client-instance-master/src/store/GameCreate/saga.js",[],"/Users/garinegorgmail.com/Downloads/gohackathon-base-client-instance-master/src/store/Profile/saga.js",[],"/Users/garinegorgmail.com/Downloads/gohackathon-base-client-instance-master/src/store/Board/types.js",[],"/Users/garinegorgmail.com/Downloads/gohackathon-base-client-instance-master/src/store/Auth/types.js",[],"/Users/garinegorgmail.com/Downloads/gohackathon-base-client-instance-master/src/store/GameCreate/types.js",[],"/Users/garinegorgmail.com/Downloads/gohackathon-base-client-instance-master/src/store/Profile/types.js",[],"/Users/garinegorgmail.com/Downloads/gohackathon-base-client-instance-master/src/components/ButtonCustom/index.js",[],"/Users/garinegorgmail.com/Downloads/gohackathon-base-client-instance-master/src/components/InputCustom/index.js",[],"/Users/garinegorgmail.com/Downloads/gohackathon-base-client-instance-master/src/pages/Main/components/Header/index.js",[],"/Users/garinegorgmail.com/Downloads/gohackathon-base-client-instance-master/src/pages/Main/components/Content/index.js",[],"/Users/garinegorgmail.com/Downloads/gohackathon-base-client-instance-master/src/pages/GameBoard/components/Header/index.js",[],"/Users/garinegorgmail.com/Downloads/gohackathon-base-client-instance-master/src/pages/GameBoard/components/GameInfo/components/Players/Players.js",["301","302","303","304","305"],"import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport Avatar1 from \"../../../../../../assets/img/avatar.png\";\nimport Avatar2 from \"../../../../../../assets/img/avatar-2.png\";\nimport { useSelector, useStore } from \"react-redux\";\n\nconst Wrapper = styled.div`\n  display: flex;\n`;\nconst Player = styled.div`\n  display: flex;\n  width: 50%;\n  padding: 19px 10px;\n  background: ${(props) => (props.active ? \"#EDEDED\" : \"#F9F9F9\")};\n  border: ${(props) => (props.winner ? \"4px solid green\" : \"0px\")};\n  position: relative;\n`;\nconst PlayerRight = styled(Player)`\n  justify-content: flex-end;\n`;\nconst Avatar = styled.img`\n  border-radius: 100px;\n  width: 95px;\n  margin-right: 15px;\n  border: 6px solid #000;\n`;\nconst AvatarRight = styled.img`\n  border-radius: 100px;\n  width: 95px;\n  margin-left: 15px;\n  border: 6px solid #FFF;\n`;\nconst Info = styled.div``;\nconst Name = styled.p`\n  color: #5b5b5b;\n  font-size: 24px;\n`;\nconst Pts = styled.p`\n  color: #5b5b5b;\n  font-size: 18px;\n`;\nconst Score = styled.p`\n  color: #aaaaaa;\n  font-size: 18px;\n  position: absolute;\n  bottom: 10px;\n  right: 10px;\n`;\nconst ScoreRight = styled.p`\n  color: #aaaaaa;\n  font-size: 18px;\n  position: absolute;\n  bottom: 10px;\n  left: 10px;\n`;\nconst Treangle = styled.div`\n  display: ${(props) => (props.active ? \"block\" : \"none\")};\n  position: absolute;\n  content: \"\";\n  right: 0;\n  top: 36px;\n  border: 28px solid transparent;\n  border-right: 38px solid #a4a4a4;\n`;\nconst TreangleRight = styled.div`\n  display: ${(props) => (props.active ? \"block\" : \"none\")};\n  position: absolute;\n  content: \"\";\n  left: 0;\n  top: 36px;\n  border: 28px solid transparent;\n  border-left: 38px solid #a4a4a4;\n`;\nconst Scores = styled.div`\n  font-size: 20px;\n  font-weight: bold;\n  padding-top: 10px;\n  color: green;\n`;\n\nconst Pass = styled.div`\n  position: absolute;\n  top: 0;\n  right: 10px;\n  font-size: 18px;\n  font-weight: bold;\n  padding-top: 10px;\n  color: #aaaaaa;\n`;\nconst PassRight = styled.div`\n  position: absolute;\n  top: 0;\n  left: 10px;\n  font-size: 18px;\n  font-weight: bold;\n  padding-top: 10px;\n  color: #aaaaaa;\n`;\n\nconst Time = styled.div`\n  color: #aaaaaa;\n  font-size: 18px;\n  position: absolute;\n  bottom: 10px;\n  right: 50px;\n`;\nconst TimeRight = styled.p`\n  color: #aaaaaa;\n  font-size: 18px;\n  position: absolute;\n  bottom: 10px;\n  left: 50px;\n`;\n\nlet timesPlayerOneCall = null\nlet timesPlayerTwoCall = null\n\nconst Players = ({ yourColor, enemyPass, stepColor, you, opponent, stepMain, stepTwo, times }) => {\n\n  const scores = useSelector((state) => state.board.scores);\n  const winner = useSelector((state) => state.board.scoresWinner);\n\n  const [timerParseOne, setTimerParseOne] = useState('')\n  const [timerParseTwo, setTimerParseTwo] = useState('')\n\n  useEffect(async () => {\n    await clearTimeout(timesPlayerOneCall)\n    await clearTimeout(timesPlayerTwoCall)\n    timesPlayerOne(times.playerOne, stepColor === 'black')\n    timesPlayerTwo(times.playerTwo, stepColor === 'white')\n  }, [times])\n\n  const timesPlayerOne = (t, start) => {\n    if (t >= 0) {\n      timesPlayerOneCall = setTimeout(() => {\n        const time = t - 1\n        const hours = Math.floor(t / 60 / 60);\n        const minutes = Math.floor(t / 60) - (hours * 60);\n        const seconds = Math.floor(t % 60);\n        setTimerParseOne(`${hours > 0 ? hours.toString().padStart(2, '0') + ':' : ''}${minutes.toString().padStart(2, '0')}:${seconds.toString().padStart(2, '0')}`)\n        if (start) {\n          timesPlayerOne(time, start)\n        }\n      }, 1000)\n    } else {\n      clearTimeout(timesPlayerOneCall)\n    }\n  }\n\n  const timesPlayerTwo = (t, start) => {\n    if (t >= 0) {\n      timesPlayerTwoCall = setTimeout(() => {\n        const time = t - 1\n        const hours = Math.floor(t / 60 / 60);\n        const minutes = Math.floor(t / 60) - (hours * 60);\n        const seconds = Math.floor(t % 60);\n        setTimerParseTwo(`${hours > 0 ? hours.toString().padStart(2, '0') + ':' : ''}${minutes.toString().padStart(2, '0')}:${seconds.toString().padStart(2, '0')}`)\n        if (start) {\n          timesPlayerTwo(time, start)\n        }\n      }, 1000)\n    } else {\n      clearTimeout(timesPlayerTwoCall)\n    }\n  }\n\n  return (\n    <Wrapper>\n      <Player active={yourColor === \"black\"} winner={winner && (winner.winner === 'B')}>\n        <Avatar alt=\"avatar\" src={yourColor === 'black' ? you.avatar : opponent.avatar} />\n        <Info>\n          <Name>{yourColor === 'black' ? you.nickname : opponent.nickname}</Name>\n          <Pts>{yourColor === 'black' ? you.pts : opponent.pts}/{yourColor === 'black' ? you.position+'th' : opponent.position+'th'}</Pts>\n          {scores && (scores.winner === 'B') && (\n            <Scores>\n              + {scores.score}\n            </Scores>\n          )}\n        </Info>\n        { enemyPass && yourColor !== 'black' && (<Pass>Пас</Pass>)}\n        <Time>{timerParseOne}</Time>\n        <Score>{stepMain}</Score>\n        <Treangle active={stepColor === \"black\"} />\n      </Player>\n      <PlayerRight active={yourColor === \"white\"} winner={winner && (winner.winner === 'W')}>\n        <Info>\n          <Name>{yourColor !== 'white' ? opponent.nickname : you.nickname}</Name>\n          <Pts>{yourColor !== 'white' ? opponent.pts : you.pts}/{yourColor !== 'white' ? opponent.position+'th' : you.position+'th'}</Pts>\n          {scores && (scores.winner === 'W') && (\n            <Scores>\n              + {scores.score}\n            </Scores>\n          )}\n        </Info>\n        { enemyPass && yourColor !== 'white' && (<PassRight>Пас</PassRight>)}\n        <TimeRight>{timerParseTwo}</TimeRight>\n        <ScoreRight>{stepTwo}</ScoreRight>\n        <AvatarRight alt=\"avatar\" src={yourColor !== 'white' ? opponent.avatar : you.avatar} />\n        <TreangleRight active={stepColor === \"white\"} />\n      </PlayerRight>\n    </Wrapper>\n  );\n};\n\nexport default Players;\n","/Users/garinegorgmail.com/Downloads/gohackathon-base-client-instance-master/src/pages/GameBoard/components/GameInfo/components/Info/Info.js",["306"],"import React, { useEffect } from \"react\";\nimport styled from \"styled-components\";\n\nconst Wrapper = styled.div`\n  margin-top: 23px;\n  min-height: 508px;\n  overflow-y: scroll;\n`;\nconst TextBlock = styled.div`\n  background: #f7f7f7;\n  padding: 20px 40px;\n`;\nconst Text = styled.p`\n  font-size: 18px;\n`;\n\nconst Info = ({turns}) => {\n  return (\n    <Wrapper>\n      <TextBlock>\n        {turns.map((item)=>{\n          return <Text>{item}</Text>\n        })}\n      </TextBlock>\n    </Wrapper>\n  );\n};\n\nexport default Info;\n","/Users/garinegorgmail.com/Downloads/gohackathon-base-client-instance-master/src/api/board.js",[],"/Users/garinegorgmail.com/Downloads/gohackathon-base-client-instance-master/src/api/auth.js",[],"/Users/garinegorgmail.com/Downloads/gohackathon-base-client-instance-master/src/api/gameCreate.js",[],"/Users/garinegorgmail.com/Downloads/gohackathon-base-client-instance-master/src/api/profile.js",[],"/Users/garinegorgmail.com/Downloads/gohackathon-base-client-instance-master/src/pages/Main/components/Header/Header.js",["307","308"],"import React from \"react\";\nimport styled from \"styled-components\";\nimport Logo from \"../../../../assets/img/logo.png\";\nimport AvatarImage from \"../../../../assets/img/avatar.png\";\nimport { MAIN_URL, PROFILE_URL } from \"../../../../constants/routes\";\nimport { ButtonCustom } from \"../../../../components/ButtonCustom\";\nimport { Input } from \"../../../../components/InputCustom\";\n\nconst Wrapper = styled.div`\n  max-width: 1300px;\n  margin: 0 auto;\n  padding-top: 35px;\n  display: flex;\n  justify-content: flex-start;\n  position: absolute;\n  width: 100%;\n  top: 0;\n`;\n\nconst Left = styled.div`\n  display: flex;\n  align-items: center;\n  cursor: pointer;\n  width: auto;\n  flex-shrink: 1;\n`;\nconst Right = styled.div`\n  width: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: flex-end;\n`;\nconst RightContent = styled.div`\n  width: auto;\n  display: flex;\n  align-items: center;\n  justify-content: flex-end;\n  cursor: pointer;\n`;\n\nconst RightSearch = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: flex-end;\n  flex-wrap: no-wrap;\n  cursor: pointer;\n  width: 100%;\n`;\n\nconst Info = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-end;\n`;\n\nconst Logotype = styled.img`\n  width: 405px;\n  height: auto;\n  margin-right: 14px;\n`;\n\nconst Name = styled.p`\n  font-size: 48px;\n  line-height: 56px;\n  font-weight: 700;\n`;\n\nconst ScoreWrapper = styled.div`\n  display: flex;\n`;\n\nconst Pts = styled.p`\n  font-size: 20px;\n  line-height: 23px;\n  color: #5b5b5b;\n`;\n\nconst Avatar = styled.img`\n  border-radius: 100px;\n  margin-left: 20px;\n  width: 115px;\n`;\n\nconst Search = styled.img`\n  border-radius: 100px;\n  margin-left: 20px;\n  width: 115px;\n`;\n\nexport const Header = ({\n  history,\n  setSearchType,\n  searchType,\n  nickname,\n  pts,\n  winrate,\n  avatar,\n  profile,\n  setNicknameFunc\n}) => (\n  <Wrapper>\n    <Left\n      onClick={() => {\n        if (searchType !== \"ConnectRandom\" && searchType !== \"ConnectCode\") {\n          history.push(MAIN_URL);\n          setSearchType(\"\");\n        }\n      }}\n    >\n      <Logotype alt=\"logo\" src={Logo} />\n    </Left>\n    {!profile ? (\n      <Right>\n        <RightContent onClick={() => {\n          if (searchType !== \"ConnectRandom\" && searchType !== \"ConnectCode\") {\n            history.push(PROFILE_URL);\n            setSearchType(\"\");\n          }\n        }}>\n          <Info>\n            <Name>{nickname || \"\"}</Name>\n            <ScoreWrapper>\n              <Pts style={{ marginRight: 16 }}>{pts || 0}pts</Pts>\n              <Pts>{winrate || \"\"}</Pts>\n            </ScoreWrapper>\n          </Info>\n          <Avatar alt=\"avatar\" src={avatar} />\n        </RightContent>\n      </Right>\n    ) : (\n      <RightSearch>\n        <Input\n          onChange={(e) => setNicknameFunc(e)}\n          width=\"500px\"\n          mr={40}\n          textAlign=\"left\"\n          placeholder=\"Введите ник или номер игрока\"\n        />\n        <ButtonCustom width=\"auto\" onClick={() => {\n          history.push(MAIN_URL)\n          setSearchType(\"\")\n        }} padding=\"0 20px\">\n          Меню\n        </ButtonCustom>\n      </RightSearch>\n    )}\n  </Wrapper>\n);\n","/Users/garinegorgmail.com/Downloads/gohackathon-base-client-instance-master/src/pages/Main/components/Content/Content.js",["309","310","311"],"import React, {useEffect, useState} from \"react\";\nimport styled from \"styled-components\";\nimport { ButtonCustom } from \"../../../../components/ButtonCustom\";\nimport { CodeContent } from \"../CodeContent\";\nimport { Connect } from \"../Connect\";\nimport { LoadingGame } from \"../LoadingGame\";\nimport { Winner } from \"../Winner\";\nimport { Error } from \"../Error\";\nimport { INFO_URL } from \"../../../../constants/routes\";\nimport { createRandomGame, createGameWithAi } from \"../../../../store/GameCreate/actions\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nconst Wrapper = styled.div`\n  width: 613px;\n  margin: 0 auto;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nconst ContentMainBoard = (setSearchType, searchType, history, gameId) => {\n  const [opponent, setOpponent] = useState({})\n  const [code, setCode] = useState('')\n\n  switch (searchType) {\n    case \"Code\":\n      return <CodeContent gameId={gameId} setSearchType={setSearchType} />;\n\n    case \"Random\":\n      return (\n        <LoadingGame\n          gameId={gameId}\n          setSearchType={setSearchType}\n          text=\"Ожидание случайного соперника\"\n          setOpponent={setOpponent}\n          searchType={searchType}\n          />\n      );\n\n    case \"CodeEnter\":\n      return (\n        <LoadingGame\n          gameId={gameId}\n          setSearchType={setSearchType}\n          setOpponent={setOpponent}\n          code={code}\n          text=\"Ожидание второго игрока\"\n          searchType={searchType}\n        />\n      );\n\n    case \"ConnectRandom\":\n      return (\n        <Connect\n          history={history}\n          opponent={opponent}\n          setSearchType={setSearchType}\n          text=\"Противник найден!\"\n        />\n      );\n\n    case \"ConnectCode\":\n      return (\n        <Connect\n          history={history}\n          opponent={opponent}\n          setSearchType={setSearchType}\n          text=\"Игрок подключился!\"\n        />\n      );\n\n    case \"Win\":\n      return <Winner setSearchType={setSearchType} />;\n\n    case \"Error\":\n      return (\n        <Error\n          error=\"Не удалось подключиться к запрашиваемой игре\"\n          setSearchType={setSearchType}\n        />\n      );\n\n    default:\n  }\n};\n\nexport const Content = ({ history, searchType, setSearchType }) => {\n  const dispatch = useDispatch();\n  const gameId = useSelector(state => state.createGame.id);\n\n  useEffect(async ()=>{\n    if (searchType === \"Random\") await dispatch(createRandomGame())\n    if (searchType === \"WithAi\") await dispatch(createGameWithAi())\n  }, [searchType])\n\n  return (\n    <Wrapper>\n      {!searchType ? (\n        <>\n          <ButtonCustom mb={30} onClick={() => history.push('/gameBoard')} disabled={gameId === null}>\n            Продолжить игру\n          </ButtonCustom>\n          <ButtonCustom mb={30} onClick={() => setSearchType(\"Random\")} disabled={gameId !== null}>\n            Игра со случайным соперником\n          </ButtonCustom>\n          <ButtonCustom mb={30} onClick={() => setSearchType(\"WithAi\")} disabled={gameId !== null}>\n            Игра с ИИ\n          </ButtonCustom>\n          <ButtonCustom onClick={() => setSearchType(\"Code\")} mb={30} disabled={gameId !== null}>\n            Закрытая игра\n          </ButtonCustom>\n          <ButtonCustom mb={30} onClick={() => history.push('/liders')}>Рейтинг игроков</ButtonCustom>{\" \"}\n          <ButtonCustom\n            onClick={() => {\n              history.push(INFO_URL);\n              setSearchType(\"\");\n            }}\n          >\n            Информация для участников\n          </ButtonCustom>{\" \"}\n        </>\n      ) : null}\n      {ContentMainBoard(setSearchType, searchType, history, gameId)}\n    </Wrapper>\n  );\n};\n","/Users/garinegorgmail.com/Downloads/gohackathon-base-client-instance-master/src/pages/GameBoard/components/Header/Header.js",["312","313","314","315","316"],"import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport Logo from \"../../../../assets/img/logo_game.png\";\nimport {MAIN_URL} from '../../../../constants/routes'\n\nconst Wrapper = styled.div`\n  display: flex;\n  height: 66px;\n  align-items: center;\n  margin-bottom: 34px;\n  padding-top: 29px;\n`;\nconst Content = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  width: 100%;\n`;\nconst Menu = styled.div`\n  display: flex;\n  align-items: center;\n  margin-left: 64px;\n`;\nconst Left = styled.div`\n  display: flex;\n  align-items: center;\n`;\nconst LogoWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  cursor: pointer;\n`;\nconst Logotype = styled.img`\n`;\nconst Text = styled.p`\n  font-size: 24px;\n  line-height: 28px;\n  margin-right: 32px;\n  cursor: pointer;\n`;\nconst TextHint = styled.p`\n  font-size: 24px;\n  line-height: 28px;\n  margin-right: 32px;\n  cursor: pointer;\n  color: ${(props) => (props.hint ? \"#D8AD63\" : \"#000\")};\n`;\n\nconst TextSdf = styled.p`\n  font-size: 24px;\n  line-height: 28px;\n  cursor: pointer;\n  color: #aaaaaa;\n  &:hover {\n    color: #000000;\n  }\n`;\nconst GameId = styled.p`\n  font-size: 24px;\n  line-height: 28px;\n`;\nconst Timer = styled.p`\n  font-size: 24px;\n  line-height: 28px;\n  color: #767676;\n`;\n\nlet timesCal = null;\n\nexport const Header = ({ history, gameId, setHint, hint, setResign, helpType, setPass, viewPass, view }) => {\n\n  return (\n    <Wrapper>\n      <Content>\n        <Left>\n          <LogoWrapper onClick={() => history.push(MAIN_URL)}>\n            <Logotype alt=\"logo\" src={Logo} />\n          </LogoWrapper>\n          <Menu>\n            {viewPass && (\n              <Text onClick={() => setPass()}>Пас</Text>\n            )}\n            <Text onClick={() => setResign()}>Сдаться</Text>\n            {view && (\n              <TextHint onClick={() => setHint(!hint)} hint={hint}>Взять подсказку</TextHint>\n            )}\n          </Menu>\n        </Left>\n        <GameId>ID игры: {gameId}</GameId>\n      </Content>\n    </Wrapper>\n  );\n};\n","/Users/garinegorgmail.com/Downloads/gohackathon-base-client-instance-master/src/api/base.js",["317"],"import logger from '../helpers/logger';\nimport {__DEV__ } from '../constants/env';\n\nconst TIMEOUT = 20000; // 20 sec timeout\nconst baseUrl = process.env.REACT_APP_PUBLIC_URL || 'https://go-backend-denis.ambersoft.llc';\n\nconst fetchWithTimeout = (...args) => {\n  // eslint-disable-next-line no-async-promise-executor\n  return new Promise(async resolve => {\n    const t = setTimeout(() => {\n      resolve({ status: 0, error: 'Request timed out' });\n    }, TIMEOUT);\n    try {\n      const res = await fetch(...args);\n      resolve(res);\n    } finally {\n      clearTimeout(t);\n    }\n  });\n}\n\nconst authHeaders = token => {\n  const headers = new Headers();\n  headers.append('Content-Type', 'application/json');\n  headers.append('Authorization', `Bearer ${token}`);\n  headers.append('Accept', 'application/json');\n  return headers;\n};\n\n/**\n * Throws connection error.\n */\nconst throwConnectionError = (error) => {\n  throw new Error(error);\n}\n\nconst BaseAPI = (method, { url, body, token }, mockResponse) => {\n\n  const baseHeaders = new Headers();\n  // baseHeaders.append('Content-Type', 'application/json');\n  // baseHeaders.append('Accept', 'application/json');\n  const uri = `${baseUrl}/${url}`;\n\n  const params = {\n    method,\n    mode: 'cors',\n    headers: baseHeaders,\n    // dataType: 'json'\n  };\n\n  if (method !== 'GET') {\n    params.body = JSON.stringify(body)\n  }\n\n  logger.info(`${method}: `, uri, params);\n\n  if (mockResponse) {\n    return new Promise((resolve) => resolve(mockResponse))\n  }\n\n  return fetchWithTimeout(uri, params)\n      .catch(throwConnectionError)\n      .then(async response => {\n        await validateResponse(response);\n        return response;\n      })\n      .then(response => {\n        if (response.status === 401) {\n          return { code: response.status, message: response.statusText }\n        }\n\n        return response.json()\n      });\n}\n\nexport const POST = (url, body, token = null, mockResponse = undefined) => {\n  return BaseAPI('POST', {url, body, token}, mockResponse)\n}\n\nexport const PUT = (url, body, token = null, mockResponse = undefined) => {\n  return BaseAPI('PUT', {url, body, token}, mockResponse)\n}\n\nexport const PATCH = (url, body, token = null, mockResponse = undefined) => {\n  return BaseAPI('PATCH', {url, body, token}, mockResponse)\n}\n\nexport const GET = (url, body, token = null, mockResponse = undefined) => {\n  return BaseAPI('GET', {url, body, token}, mockResponse)\n}\n\nexport const DELETE = (url, body, token = null, mockResponse = undefined) => {\n  return BaseAPI('DELETE', {url, body, token}, mockResponse)\n}\n\n/**\n* Validates HTTP response and throws error if something goes wrong.\n* @param {Response} response\n*/\nconst validateResponse = async (response) => {\n // Redirect user to login screen if he is not authorized\n if (response.status === 401) {\n   return Promise.resolve(true);\n }\n\n if (response.status !== 200 || response.error) {\n   // if (!Config.__TEST__) {\n   logger.error(response);\n   // }\n }\n\n // if (Config.__TEST__) return Promise.resolve(true);\n if (__DEV__ && typeof response.clone === 'function') {\n   const clonedResponse = response.clone();\n   const body = await clonedResponse.json();\n\n   logger.info({\n     response,\n     body,\n   });\n } else {\n   logger.info(response);\n }\n\n return Promise.resolve(true);\n}\n","/Users/garinegorgmail.com/Downloads/gohackathon-base-client-instance-master/src/constants/env.js",[],"/Users/garinegorgmail.com/Downloads/gohackathon-base-client-instance-master/src/helpers/logger.js",["318"],"/* eslint-disable no-console */\n/* eslint-disable prefer-rest-params */\n/* eslint-disable func-names */\nimport { __DEV__ } from '../constants/env';\n\nconst emptyFn = () => {};\nexport default {\n  info: __DEV__\n    ? function() {\n        console.info(...arguments);\n      }\n    : emptyFn,\n  debug: __DEV__\n    ? function() {\n        console.debug(...arguments);\n      }\n    : emptyFn,\n  error: __DEV__\n    ? function() {\n        console.error(...arguments);\n      }\n    : emptyFn,\n  warn: __DEV__\n    ? function() {\n        console.warn(...arguments);\n      }\n    : emptyFn,\n};","/Users/garinegorgmail.com/Downloads/gohackathon-base-client-instance-master/src/pages/Main/components/CodeContent/index.js",[],"/Users/garinegorgmail.com/Downloads/gohackathon-base-client-instance-master/src/pages/Main/components/Winner/index.js",[],"/Users/garinegorgmail.com/Downloads/gohackathon-base-client-instance-master/src/pages/Main/components/Error/index.js",[],"/Users/garinegorgmail.com/Downloads/gohackathon-base-client-instance-master/src/pages/Main/components/LoadingGame/index.js",[],"/Users/garinegorgmail.com/Downloads/gohackathon-base-client-instance-master/src/pages/Main/components/Connect/index.js",[],"/Users/garinegorgmail.com/Downloads/gohackathon-base-client-instance-master/src/pages/Main/components/CodeContent/CodeContent.js",["319","320"],"import React, { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector, useStore } from \"react-redux\";\nimport styled from \"styled-components\";\nimport { ButtonCustom } from \"../../../../components/ButtonCustom\";\nimport { Input } from \"../../../../components/InputCustom\";\nimport { clearGameId, createGameCode, joinGameWithCode } from \"../../../../store/GameCreate/actions\";\nimport { client, token } from \"../../../../Socket\";\n\nconst Text = styled.p`\n  font-size: 36px;\n  line-height: 42px;\n  text-align: center;\n`;\n\nconst CustomCodeContent = ({ setSearchType, setContentType }) => (\n  <>\n    <Text>«Закрытая игра»</Text>\n    <ButtonCustom mt={40} mb={30} onClick={() => setContentType(\"CreateGame\")}>\n      Создать игру\n    </ButtonCustom>\n    <ButtonCustom mb={30} onClick={() => setContentType(\"JoinGame\")}>\n      Присоединиться\n    </ButtonCustom>\n    <ButtonCustom onClick={() => setSearchType(\"\")}>Отмена</ButtonCustom>\n  </>\n);\n\nconst CreateGame = ({ setSearchType, cancelGame, code }) => (\n  <>\n    <Text>Код вашей игры:</Text>\n    <Input value={code || 'Ожидайте'} textAlign=\"center\" disabled mt={40} mb={30} />\n    <ButtonCustom mb={30} onClick={() => setSearchType(\"CodeEnter\")}>\n      Начать игру\n    </ButtonCustom>\n    <ButtonCustom onClick={() => cancelGame()}>Отмена</ButtonCustom>\n  </>\n);\n\nconst JoinGame = ({ setSearchType, cancelGame, code, setCode }) => (\n  <>\n    <Text>Укажите код игры:</Text>\n    <Input mt={30} mb={30} onChange={setCode} name=\"code\" />\n    <ButtonCustom\n      mb={30}\n      disabled={!code}\n      onClick={() => code && setSearchType(\"CodeEnter\")}\n    >\n      Присоединиться\n    </ButtonCustom>\n    <ButtonCustom onClick={() => cancelGame()}>Отмена</ButtonCustom>\n  </>\n);\n\nexport const CodeContent = ({ gameId, setSearchType }) => {\n  const [code, setCode] = useState(\"\");\n  const [contentType, setContentType] = useState(\"\");\n  const dispatch = useDispatch();\n  const codeGame = useSelector(state => state.createGame.code);\n\n  useEffect(() => {\n    if (contentType === \"CreateGame\") {\n      dispatch(createGameCode());\n    }\n  }, [contentType]);\n\n  const getGameId = async (val) => {\n    if (val === \"CodeEnter\") {\n      if (code) {\n        await dispatch(joinGameWithCode(code));\n      }\n    } else {\n      setSearchType(val)\n    }\n  }\n\n  const cancelGame = async () => {\n    client.send(JSON.stringify([7, \"go/game\", {command: \"resign\", token: token, game_id: gameId}]));\n    await dispatch(clearGameId())\n    setSearchType(\"\")\n  }\n\n  return (\n    <>\n      {!contentType ? (\n        <CustomCodeContent\n          setSearchType={setSearchType}\n          setContentType={setContentType}\n        />\n      ) : null}\n      {contentType === \"CreateGame\" ? (\n        <CreateGame cancelGame={()=>cancelGame()} setSearchType={setSearchType} code={codeGame} />\n      ) : null}\n      {contentType === \"JoinGame\" ? (\n        <JoinGame cancelGame={()=>cancelGame()} setSearchType={(val) => getGameId(val)} code={code} setCode={(val) => setCode(val)} />\n      ) : null}\n    </>\n  );\n};\n","/Users/garinegorgmail.com/Downloads/gohackathon-base-client-instance-master/src/pages/Main/components/Winner/Winner.js",["321","322"],"import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport { ButtonCustom } from \"../../../../components/ButtonCustom\";\nimport { useSelector } from \"react-redux\";\n\nconst Text = styled.p`\n  font-size: 36px;\n  line-height: 42px;\n  text-align: center;\n`;\n\nconst ScoreText = styled.p`\n  font-size: 36px;\n  line-height: 42px;\n  text-align: center;\n  display: flex;\n  margin-top: 15px;\n`;\n\nconst Enemy = styled.div`\n  margin-bottom: 20px;\n`;\n\nconst Info = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nconst Name = styled.p`\n  font-size: 48px;\n  line-height: 56px;\n  font-weight: 700;\n`;\n\nconst Score = styled.p`\n  font-size: 36px;\n  line-height: 42px;\n  font-weight: 700;\n  position: relative;\n  margin-left: 5px;\n  margin-right: 5px;\n`;\nconst ScoreAfter = styled(Score)`\n  &:before {\n    position: absolute;\n    content: \"\";\n    width: 100%;\n    height: 3px;\n    background: #ffc164;\n    bottom: 0;\n  }\n`;\nconst ScoreBefore = styled(Score)`\n  &:before {\n    position: absolute;\n    content: \"\";\n    width: 100%;\n    height: 3px;\n    background: #dd3f65;\n    bottom: 0;\n  }\n`;\n\nconst ScoreWrapper = styled.div`\n  display: flex;\n`;\n\nconst Pts = styled.p`\n  font-size: 20px;\n  color: #c1c1c1;\n`;\n\nconst Avatar = styled.img`\n  border-radius: 100px;\n  width: 150px;\n`;\n\nexport const Winner = ({setSearchType}) => {\n  const [player, setPlayer] = useState({})\n\n  const userId = useSelector((state) => state.profile.userProfile.user.id);\n  const winner = useSelector((state) => state.board.winner);\n  const loser = useSelector((state) => state.board.loser);\n\n  if(!winner) {\n    setSearchType('')\n  }\n\n  useEffect(()=>{\n    if (winner?.id === userId) {\n      setPlayer(winner)\n    } else {\n      setPlayer(loser)\n    }\n  },[winner, loser])\n\n  return (\n    <>\n      <Enemy>\n        <Info>\n          <Avatar alt=\"avatar\" src={player?.avatar} />\n          <Name>{player?.nickname}</Name>\n          <ScoreWrapper>\n            <Pts>{player?.pts}</Pts>\n            <Pts>\\</Pts>\n            <Pts>{player?.position+'th'}</Pts>\n          </ScoreWrapper>\n        </Info>\n      </Enemy>\n      <Text>{winner?.id === userId ? 'Победил!' : 'Проиграл!'}</Text>\n      <ScoreText>Счет: <ScoreAfter>{player?.finalScore}</ScoreAfter>{/*/ <ScoreBefore>10</ScoreBefore>*/}</ScoreText>\n      <ScoreText>Очки по подсказкам: <ScoreAfter>{player?.hintScore}</ScoreAfter></ScoreText>\n      <ScoreText>Итоговые очки: <ScoreAfter>{player?.rpScore}</ScoreAfter></ScoreText>\n      <ButtonCustom\n        width=\"327px\"\n        mt={30}\n        mb={30}\n        onClick={() => {\n          setSearchType(\"\");\n        }}\n      >\n        В меню\n      </ButtonCustom>\n      <ButtonCustom width=\"327px\" onClick={()=>setSearchType(\"\")}>Играть еще</ButtonCustom>\n    </>\n  );\n};\n","/Users/garinegorgmail.com/Downloads/gohackathon-base-client-instance-master/src/pages/Main/components/Error/Error.js",[],"/Users/garinegorgmail.com/Downloads/gohackathon-base-client-instance-master/src/pages/Main/components/LoadingGame/LoadingGame.js",["323"],"import React, { useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { ButtonCustom } from \"../../../../components/ButtonCustom\";\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\nimport Loader from \"react-loader-spinner\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport { client, token } from '../../../../Socket.js'\nimport { clearGameId } from \"../../../../store/GameCreate/actions\";\nimport { Input } from \"../../../../components/InputCustom\";\n\nconst Text = styled.p`\n  font-size: 36px;\n  line-height: 42px;\n  margin-bottom: 86px;\n  text-align: center;\n`;\n\nconst Spinner = styled.div`\n  margin: 0 auto;\n  width: 126px;\n  margin-bottom: 46px;\n`;\n\nexport const LoadingGame = ({ text, setSearchType, setOpponent, searchType, gameId }) => {\n  const dispatch = useDispatch();\n  const user_id = useSelector((state) => state.profile.userProfile.user.id);\n  const codeGame = useSelector(state => state.createGame.code);\n\n  useEffect(() => {\n    if (gameId) {\n      client.send(JSON.stringify([5, 'go/game']));\n      client.send(JSON.stringify([7, \"go/game\", {command: \"auth\", token: localStorage.getItem('GoGameToken'), game_id: gameId}]));\n\n      client.onmessage = function(e) {\n        if (typeof e.data === 'string') {\n          let jsonData = JSON.parse(e.data);\n          if (jsonData.payload) {\n            if (jsonData.payload.type === 'userConnected') {\n              if (String(jsonData.payload.userId) !== String(user_id)) {\n                setOpponent(jsonData.payload.player)\n                if (searchType === \"Random\") {\n                  setSearchType(\"ConnectRandom\");\n                }\n                if (searchType === \"CodeEnter\") {\n                  setSearchType(\"ConnectCode\");\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }, [gameId]);\n\n  const cancelGame = async () => {\n    client.send(JSON.stringify([7, \"go/game\", {command: \"resign\", token: token, game_id: gameId}]));\n    await dispatch(clearGameId())\n    setSearchType(\"\")\n  }\n  const codeBlock = () => {\n    if (codeGame) {\n      return <Input value={codeGame || 'Ожидайте'} textAlign=\"center\" disabled mt={40} mb={30} />\n    }\n  }\n\n  return (\n    <>\n      <Spinner>\n        <Loader type=\"Grid\" color=\"#3b3b3b\" height={126} width={126} />\n      </Spinner>\n      <Text>{text}</Text>\n      {codeBlock()}\n      <ButtonCustom onClick={() => cancelGame()}>\n        Отмена\n      </ButtonCustom>\n    </>\n  );\n};\n","/Users/garinegorgmail.com/Downloads/gohackathon-base-client-instance-master/src/pages/Main/components/Connect/Connect.js",["324","325"],"import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { ButtonCustom } from \"../../../../components/ButtonCustom\";\nimport AvatarImage from \"../../../../assets/img/avatar-2.png\";\nimport { GAME_URL } from \"../../../../constants/routes\";\n\nconst Text = styled.p`\n  font-size: 36px;\n  line-height: 42px;\n  margin-bottom: 30px;\n  text-align: center;\n`;\n\nconst Enemy = styled.div`\n  margin-bottom: 20px;\n`;\n\nconst Info = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nconst Name = styled.p`\n  font-size: 48px;\n  line-height: 56px;\n  font-weight: 700;\n`;\n\nconst ScoreWrapper = styled.div`\n  display: flex;\n`;\n\nconst Pts = styled.p`\n  font-size: 20px;\n  color: #c1c1c1;\n`;\n\nconst Avatar = styled.img`\n  border-radius: 100px;\n`;\n\nexport const Connect = ({ text, history, opponent }) => {\n\n  const [seconds, setSeconds] = useState(0);\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setSeconds((seconds) => seconds + 1);\n    }, 1000);\n    return () => clearInterval(interval);\n  }, []);\n\n  useEffect(() => {\n    if (seconds === 1) {\n      history.push(GAME_URL)\n    }\n  }, [seconds]);\n\n  return (\n    <>\n      <Enemy>\n        <Info>\n          <Avatar alt=\"avatar\" src={opponent.avatar} />\n          <Name>{opponent.nickname}</Name>\n          <ScoreWrapper>\n            <Pts>{opponent.pts}</Pts>\n            <Pts>\\</Pts>\n            <Pts>{opponent.position+'th'}</Pts>\n          </ScoreWrapper>\n        </Info>\n      </Enemy>\n      <Text>{text}</Text>\n      <ButtonCustom width={'350px'} disabled>Отмена</ButtonCustom>\n    </>\n  );\n};\n",{"ruleId":"326","severity":1,"message":"327","line":27,"column":6,"nodeType":"328","endLine":27,"endColumn":8,"suggestions":"329"},{"ruleId":"326","severity":1,"message":"327","line":108,"column":6,"nodeType":"328","endLine":108,"endColumn":8,"suggestions":"330"},{"ruleId":"326","severity":1,"message":"327","line":145,"column":6,"nodeType":"328","endLine":145,"endColumn":8,"suggestions":"331"},{"ruleId":"332","severity":1,"message":"333","line":73,"column":22,"nodeType":"334","messageId":"335","endLine":73,"endColumn":35},{"ruleId":"326","severity":1,"message":"336","line":85,"column":6,"nodeType":"328","endLine":85,"endColumn":35,"suggestions":"337"},{"ruleId":"326","severity":1,"message":"338","line":96,"column":5,"nodeType":"328","endLine":96,"endColumn":7,"suggestions":"339"},{"ruleId":"340","severity":1,"message":"341","line":152,"column":51,"nodeType":"342","messageId":"343","endLine":152,"endColumn":53},{"ruleId":"344","severity":1,"message":"345","line":214,"column":7,"nodeType":"346","messageId":"347","endLine":222,"endColumn":8},{"ruleId":"348","severity":1,"message":"349","line":67,"column":13,"nodeType":"334","messageId":"350","endLine":67,"endColumn":22},{"ruleId":"348","severity":1,"message":"351","line":68,"column":13,"nodeType":"334","messageId":"350","endLine":68,"endColumn":32},{"ruleId":"340","severity":1,"message":"341","line":70,"column":41,"nodeType":"342","messageId":"343","endLine":70,"endColumn":43},{"ruleId":"340","severity":1,"message":"341","line":71,"column":33,"nodeType":"342","messageId":"343","endLine":71,"endColumn":35},{"ruleId":"332","severity":1,"message":"352","line":6,"column":3,"nodeType":"334","messageId":"335","endLine":6,"endColumn":22},{"ruleId":"332","severity":1,"message":"353","line":1,"column":42,"nodeType":"334","messageId":"335","endLine":1,"endColumn":52},{"ruleId":"340","severity":1,"message":"341","line":15,"column":20,"nodeType":"342","messageId":"343","endLine":15,"endColumn":22},{"ruleId":"340","severity":1,"message":"341","line":16,"column":24,"nodeType":"342","messageId":"343","endLine":16,"endColumn":26},{"ruleId":"332","severity":1,"message":"354","line":1,"column":16,"nodeType":"334","messageId":"335","endLine":1,"endColumn":24},{"ruleId":"332","severity":1,"message":"355","line":5,"column":8,"nodeType":"334","messageId":"335","endLine":5,"endColumn":15},{"ruleId":"332","severity":1,"message":"356","line":3,"column":8,"nodeType":"334","messageId":"335","endLine":3,"endColumn":15},{"ruleId":"332","severity":1,"message":"357","line":4,"column":8,"nodeType":"334","messageId":"335","endLine":4,"endColumn":15},{"ruleId":"332","severity":1,"message":"358","line":5,"column":23,"nodeType":"334","messageId":"335","endLine":5,"endColumn":31},{"ruleId":"326","severity":1,"message":"359","line":126,"column":13,"nodeType":"342","endLine":131,"endColumn":4},{"ruleId":"326","severity":1,"message":"360","line":131,"column":6,"nodeType":"328","endLine":131,"endColumn":13,"suggestions":"361"},{"ruleId":"332","severity":1,"message":"362","line":1,"column":17,"nodeType":"334","messageId":"335","endLine":1,"endColumn":26},{"ruleId":"332","severity":1,"message":"363","line":4,"column":8,"nodeType":"334","messageId":"335","endLine":4,"endColumn":19},{"ruleId":"332","severity":1,"message":"364","line":84,"column":7,"nodeType":"334","messageId":"335","endLine":84,"endColumn":13},{"ruleId":"332","severity":1,"message":"365","line":23,"column":16,"nodeType":"334","messageId":"335","endLine":23,"endColumn":23},{"ruleId":"326","severity":1,"message":"359","line":91,"column":13,"nodeType":"342","endLine":94,"endColumn":4},{"ruleId":"326","severity":1,"message":"327","line":94,"column":6,"nodeType":"328","endLine":94,"endColumn":18,"suggestions":"366"},{"ruleId":"332","severity":1,"message":"362","line":1,"column":17,"nodeType":"334","messageId":"335","endLine":1,"endColumn":26},{"ruleId":"332","severity":1,"message":"354","line":1,"column":28,"nodeType":"334","messageId":"335","endLine":1,"endColumn":36},{"ruleId":"332","severity":1,"message":"367","line":49,"column":7,"nodeType":"334","messageId":"335","endLine":49,"endColumn":14},{"ruleId":"332","severity":1,"message":"368","line":62,"column":7,"nodeType":"334","messageId":"335","endLine":62,"endColumn":12},{"ruleId":"332","severity":1,"message":"369","line":68,"column":5,"nodeType":"334","messageId":"335","endLine":68,"endColumn":13},{"ruleId":"332","severity":1,"message":"370","line":22,"column":7,"nodeType":"334","messageId":"335","endLine":22,"endColumn":18},{"ruleId":"371","severity":1,"message":"372","line":7,"column":1,"nodeType":"373","endLine":28,"endColumn":3},{"ruleId":"332","severity":1,"message":"358","line":2,"column":36,"nodeType":"334","messageId":"335","endLine":2,"endColumn":44},{"ruleId":"326","severity":1,"message":"327","line":64,"column":6,"nodeType":"328","endLine":64,"endColumn":19,"suggestions":"374"},{"ruleId":"332","severity":1,"message":"375","line":54,"column":7,"nodeType":"334","messageId":"335","endLine":54,"endColumn":18},{"ruleId":"326","severity":1,"message":"376","line":96,"column":5,"nodeType":"328","endLine":96,"endColumn":20,"suggestions":"377"},{"ruleId":"326","severity":1,"message":"378","line":54,"column":6,"nodeType":"328","endLine":54,"endColumn":14,"suggestions":"379"},{"ruleId":"332","severity":1,"message":"363","line":4,"column":8,"nodeType":"334","messageId":"335","endLine":4,"endColumn":19},{"ruleId":"326","severity":1,"message":"380","line":58,"column":6,"nodeType":"328","endLine":58,"endColumn":15,"suggestions":"381"},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["382"],["383"],["384"],"no-unused-vars","'setClassNames' is assigned a value but never used.","Identifier","unusedVar","React Hook useEffect has missing dependencies: 'deleteCoordinates' and 'dispatch'. Either include them or remove the dependency array.",["385"],"React Hook useEffect has a missing dependency: 'game_id'. Either include it or remove the dependency array.",["386"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","no-redeclare","'mapStones' is already defined.","redeclared","'classNamesMapStones' is already defined.","'JOIN_GAME_WITH_CODE' is defined but never used.","'SET_LIDERS' is defined but never used.","'useState' is defined but never used.","'history' is defined but never used.","'Avatar1' is defined but never used.","'Avatar2' is defined but never used.","'useStore' is defined but never used.","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","React Hook useEffect has missing dependencies: 'stepColor', 'timesPlayerOne', and 'timesPlayerTwo'. Either include them or remove the dependency array.",["387"],"'useEffect' is defined but never used.","'AvatarImage' is defined but never used.","'Search' is assigned a value but never used.","'setCode' is assigned a value but never used.",["388"],"'TextSdf' is assigned a value but never used.","'Timer' is assigned a value but never used.","'timesCal' is assigned a value but never used.","'authHeaders' is assigned a value but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration",["389"],"'ScoreBefore' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'userId'. Either include it or remove the dependency array.",["390"],"React Hook useEffect has missing dependencies: 'searchType', 'setOpponent', 'setSearchType', and 'user_id'. Either include them or remove the dependency array. If 'setOpponent' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["391"],"React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.",["392"],{"desc":"393","fix":"394"},{"desc":"393","fix":"395"},{"desc":"393","fix":"396"},{"desc":"397","fix":"398"},{"desc":"399","fix":"400"},{"desc":"401","fix":"402"},{"desc":"403","fix":"404"},{"desc":"405","fix":"406"},{"desc":"407","fix":"408"},{"desc":"409","fix":"410"},{"desc":"411","fix":"412"},"Update the dependencies array to be: [dispatch]",{"range":"413","text":"414"},{"range":"415","text":"414"},{"range":"416","text":"414"},"Update the dependencies array to be: [multipleHint, multipleCount, dispatch, deleteCoordinates]",{"range":"417","text":"418"},"Update the dependencies array to be: [game_id]",{"range":"419","text":"420"},"Update the dependencies array to be: [stepColor, times, timesPlayerOne, timesPlayerTwo]",{"range":"421","text":"422"},"Update the dependencies array to be: [dispatch, searchType]",{"range":"423","text":"424"},"Update the dependencies array to be: [contentType, dispatch]",{"range":"425","text":"426"},"Update the dependencies array to be: [winner, loser, userId]",{"range":"427","text":"428"},"Update the dependencies array to be: [gameId, searchType, setOpponent, setSearchType, user_id]",{"range":"429","text":"430"},"Update the dependencies array to be: [history, seconds]",{"range":"431","text":"432"},[871,873],"[dispatch]",[2068,2070],[3183,3185],[2595,2624],"[multipleHint, multipleCount, dispatch, deleteCoordinates]",[2913,2915],"[game_id]",[3011,3018],"[stepColor, times, timesPlayerOne, timesPlayerTwo]",[2531,2543],"[dispatch, searchType]",[2087,2100],"[contentType, dispatch]",[1787,1802],"[winner, loser, userId]",[1843,1851],"[gameId, searchType, setOpponent, setSearchType, user_id]",[1162,1171],"[history, seconds]"]