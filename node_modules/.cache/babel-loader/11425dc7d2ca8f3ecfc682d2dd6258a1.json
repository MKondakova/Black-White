{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware, compose } from \"redux\";\nimport createSagaMiddleware from \"redux-saga\";\nimport { authReducer } from \"./Auth/reducers\";\nimport { storyStart } from \"../store/sagas\";\nimport { boardReducer } from \"./Board/reducers\";\nimport { profileReducer } from \"./Profile/reducers\";\nimport { createGameReducer } from \"./GameCreate/reducers\";\nexport const createReduxStore = () => {\n  const reducer = combineReducers({\n    auth: authReducer,\n    board: boardReducer,\n    profile: profileReducer,\n    createGame: createGameReducer\n  });\n  const sagaMiddleware = createSagaMiddleware();\n  const middleware = [sagaMiddleware];\n  const store = createStore(reducer, compose(applyMiddleware(...middleware)));\n  sagaMiddleware.run(storyStart);\n  return store;\n};","map":{"version":3,"sources":["/Users/garinegorgmail.com/Downloads/gohackathon-base-client-instance-master/src/store/index.js"],"names":["createStore","combineReducers","applyMiddleware","compose","createSagaMiddleware","authReducer","storyStart","boardReducer","profileReducer","createGameReducer","createReduxStore","reducer","auth","board","profile","createGame","sagaMiddleware","middleware","store","run"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,eAAvC,EAAwDC,OAAxD,QAAuE,OAAvE;AACA,OAAOC,oBAAP,MAAiC,YAAjC;AACA,SAASC,WAAT,QAA4B,iBAA5B;AACA,SAASC,UAAT,QAA2B,gBAA3B;AACA,SAASC,YAAT,QAA6B,kBAA7B;AACA,SAASC,cAAT,QAA+B,oBAA/B;AACA,SAASC,iBAAT,QAAkC,uBAAlC;AAEA,OAAO,MAAMC,gBAAgB,GAAG,MAAM;AACpC,QAAMC,OAAO,GAAGV,eAAe,CAAC;AAC9BW,IAAAA,IAAI,EAAEP,WADwB;AAE9BQ,IAAAA,KAAK,EAAEN,YAFuB;AAG9BO,IAAAA,OAAO,EAAEN,cAHqB;AAI9BO,IAAAA,UAAU,EAAEN;AAJkB,GAAD,CAA/B;AAMA,QAAMO,cAAc,GAAGZ,oBAAoB,EAA3C;AACA,QAAMa,UAAU,GAAG,CAACD,cAAD,CAAnB;AACA,QAAME,KAAK,GAAGlB,WAAW,CAACW,OAAD,EAAUR,OAAO,CAACD,eAAe,CAAC,GAAGe,UAAJ,CAAhB,CAAjB,CAAzB;AACAD,EAAAA,cAAc,CAACG,GAAf,CAAmBb,UAAnB;AACA,SAAOY,KAAP;AACD,CAZM","sourcesContent":["import { createStore, combineReducers, applyMiddleware, compose } from \"redux\";\nimport createSagaMiddleware from \"redux-saga\";\nimport { authReducer } from \"./Auth/reducers\";\nimport { storyStart } from \"../store/sagas\";\nimport { boardReducer } from \"./Board/reducers\";\nimport { profileReducer } from \"./Profile/reducers\";\nimport { createGameReducer } from \"./GameCreate/reducers\";\n\nexport const createReduxStore = () => {\n  const reducer = combineReducers({\n    auth: authReducer,\n    board: boardReducer,\n    profile: profileReducer,\n    createGame: createGameReducer\n  });\n  const sagaMiddleware = createSagaMiddleware();\n  const middleware = [sagaMiddleware];\n  const store = createStore(reducer, compose(applyMiddleware(...middleware)));\n  sagaMiddleware.run(storyStart);\n  return store;\n};\n"]},"metadata":{},"sourceType":"module"}