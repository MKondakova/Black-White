{"ast":null,"code":"import { SINGLE_HELP, MARKERS_CLEAR, MULTIPLE_HELP, WINNER_USER, LOSER_USER, GET_HINT_BEST_MOVES, GET_HINT_SHOW_BEST, GET_HINT_HEATMAP_FULL, GET_HINT_HEATMAP, GET_HINT_HEATMAP_ZONE, SET_BLOCKED, MAP_STONES, GET_SCORES_WINNER } from \"./types\";\nexport const hintHeatmapFull = game_id => ({\n  type: GET_HINT_HEATMAP_FULL,\n  payload: {\n    game_id: game_id\n  }\n});\nexport const singleHelp = () => ({\n  type: SINGLE_HELP\n});\nexport const multipleHelp = () => ({\n  type: MULTIPLE_HELP\n});\nexport const markersClear = () => ({\n  type: MARKERS_CLEAR\n});\nexport const setWinnerUser = winner => ({\n  type: WINNER_USER,\n  payload: winner\n});\nexport const setLoserUser = loser => ({\n  type: LOSER_USER,\n  payload: loser\n});\nexport const setBlocked = blocked => ({\n  type: SET_BLOCKED,\n  payload: blocked\n});\nexport const setMapStones = stones => ({\n  type: MAP_STONES,\n  payload: stones\n});\nexport const setScoresWinner = game_id => ({\n  type: GET_SCORES_WINNER,\n  payload: {\n    game_id\n  }\n});\nexport const hintBestMoves = (game_id, count) => ({\n  type: GET_HINT_BEST_MOVES,\n  payload: {\n    game_id: game_id,\n    count: count\n  }\n});\nexport const hintShowBest = (game_id, moves) => ({\n  type: GET_HINT_SHOW_BEST,\n  payload: {\n    game_id: game_id,\n    moves: moves\n  }\n});\nexport const hintHeatmap = game_id => ({\n  type: GET_HINT_HEATMAP,\n  payload: {\n    game_id: game_id\n  }\n});\nexport const hintHeatmapZone = (game_id, isQuarter) => ({\n  type: GET_HINT_HEATMAP_ZONE,\n  payload: {\n    game_id: game_id,\n    isQuarter\n  }\n});","map":{"version":3,"sources":["/Users/garinegorgmail.com/Downloads/gohackathon-base-client-instance-master/src/store/Board/actions.js"],"names":["SINGLE_HELP","MARKERS_CLEAR","MULTIPLE_HELP","WINNER_USER","LOSER_USER","GET_HINT_BEST_MOVES","GET_HINT_SHOW_BEST","GET_HINT_HEATMAP_FULL","GET_HINT_HEATMAP","GET_HINT_HEATMAP_ZONE","SET_BLOCKED","MAP_STONES","GET_SCORES_WINNER","hintHeatmapFull","game_id","type","payload","singleHelp","multipleHelp","markersClear","setWinnerUser","winner","setLoserUser","loser","setBlocked","blocked","setMapStones","stones","setScoresWinner","hintBestMoves","count","hintShowBest","moves","hintHeatmap","hintHeatmapZone","isQuarter"],"mappings":"AAAA,SACEA,WADF,EAEEC,aAFF,EAGEC,aAHF,EAIEC,WAJF,EAKEC,UALF,EAMEC,mBANF,EAOEC,kBAPF,EAQEC,qBARF,EASEC,gBATF,EAUEC,qBAVF,EAWEC,WAXF,EAYEC,UAZF,EAaEC,iBAbF,QAcO,SAdP;AAgBA,OAAO,MAAMC,eAAe,GAAIC,OAAD,KAAc;AAC3CC,EAAAA,IAAI,EAAER,qBADqC;AAE3CS,EAAAA,OAAO,EAAE;AAACF,IAAAA,OAAO,EAAEA;AAAV;AAFkC,CAAd,CAAxB;AAKP,OAAO,MAAMG,UAAU,GAAG,OAAO;AAC/BF,EAAAA,IAAI,EAAEf;AADyB,CAAP,CAAnB;AAIP,OAAO,MAAMkB,YAAY,GAAG,OAAO;AACjCH,EAAAA,IAAI,EAAEb;AAD2B,CAAP,CAArB;AAIP,OAAO,MAAMiB,YAAY,GAAG,OAAO;AACjCJ,EAAAA,IAAI,EAAEd;AAD2B,CAAP,CAArB;AAIP,OAAO,MAAMmB,aAAa,GAAIC,MAAD,KAAa;AACxCN,EAAAA,IAAI,EAAEZ,WADkC;AAExCa,EAAAA,OAAO,EAAEK;AAF+B,CAAb,CAAtB;AAKP,OAAO,MAAMC,YAAY,GAAIC,KAAD,KAAY;AACtCR,EAAAA,IAAI,EAAEX,UADgC;AAEtCY,EAAAA,OAAO,EAAEO;AAF6B,CAAZ,CAArB;AAKP,OAAO,MAAMC,UAAU,GAAIC,OAAD,KAAc;AACtCV,EAAAA,IAAI,EAAEL,WADgC;AAEtCM,EAAAA,OAAO,EAAES;AAF6B,CAAd,CAAnB;AAKP,OAAO,MAAMC,YAAY,GAAIC,MAAD,KAAa;AACvCZ,EAAAA,IAAI,EAAEJ,UADiC;AAEvCK,EAAAA,OAAO,EAAEW;AAF8B,CAAb,CAArB;AAKP,OAAO,MAAMC,eAAe,GAAId,OAAD,KAAc;AAC3CC,EAAAA,IAAI,EAAEH,iBADqC;AAE3CI,EAAAA,OAAO,EAAE;AAACF,IAAAA;AAAD;AAFkC,CAAd,CAAxB;AAKP,OAAO,MAAMe,aAAa,GAAG,CAACf,OAAD,EAAUgB,KAAV,MAAqB;AAChDf,EAAAA,IAAI,EAAEV,mBAD0C;AAEhDW,EAAAA,OAAO,EAAE;AAACF,IAAAA,OAAO,EAAEA,OAAV;AAAmBgB,IAAAA,KAAK,EAAEA;AAA1B;AAFuC,CAArB,CAAtB;AAKP,OAAO,MAAMC,YAAY,GAAG,CAACjB,OAAD,EAAUkB,KAAV,MAAqB;AAC/CjB,EAAAA,IAAI,EAAET,kBADyC;AAE/CU,EAAAA,OAAO,EAAE;AAACF,IAAAA,OAAO,EAAEA,OAAV;AAAmBkB,IAAAA,KAAK,EAAEA;AAA1B;AAFsC,CAArB,CAArB;AAKP,OAAO,MAAMC,WAAW,GAAInB,OAAD,KAAc;AACvCC,EAAAA,IAAI,EAAEP,gBADiC;AAEvCQ,EAAAA,OAAO,EAAE;AAACF,IAAAA,OAAO,EAAEA;AAAV;AAF8B,CAAd,CAApB;AAKP,OAAO,MAAMoB,eAAe,GAAG,CAACpB,OAAD,EAAUqB,SAAV,MAAyB;AACtDpB,EAAAA,IAAI,EAAEN,qBADgD;AAEtDO,EAAAA,OAAO,EAAE;AAACF,IAAAA,OAAO,EAAEA,OAAV;AAAmBqB,IAAAA;AAAnB;AAF6C,CAAzB,CAAxB","sourcesContent":["import {\n  SINGLE_HELP,\n  MARKERS_CLEAR,\n  MULTIPLE_HELP,\n  WINNER_USER,\n  LOSER_USER,\n  GET_HINT_BEST_MOVES,\n  GET_HINT_SHOW_BEST,\n  GET_HINT_HEATMAP_FULL,\n  GET_HINT_HEATMAP,\n  GET_HINT_HEATMAP_ZONE,\n  SET_BLOCKED,\n  MAP_STONES,\n  GET_SCORES_WINNER\n} from \"./types\";\n\nexport const hintHeatmapFull = (game_id) => ({\n  type: GET_HINT_HEATMAP_FULL,\n  payload: {game_id: game_id}\n});\n\nexport const singleHelp = () => ({\n  type: SINGLE_HELP,\n});\n\nexport const multipleHelp = () => ({\n  type: MULTIPLE_HELP,\n});\n\nexport const markersClear = () => ({\n  type: MARKERS_CLEAR,\n});\n\nexport const setWinnerUser = (winner) => ({\n  type: WINNER_USER,\n  payload: winner\n});\n\nexport const setLoserUser = (loser) => ({\n  type: LOSER_USER,\n  payload: loser\n});\n\nexport const setBlocked = (blocked) => ({\n  type: SET_BLOCKED,\n  payload: blocked\n});\n\nexport const setMapStones = (stones) => ({\n  type: MAP_STONES,\n  payload: stones\n});\n\nexport const setScoresWinner = (game_id) => ({\n  type: GET_SCORES_WINNER,\n  payload: {game_id}\n});\n\nexport const hintBestMoves = (game_id, count) => ({\n  type: GET_HINT_BEST_MOVES,\n  payload: {game_id: game_id, count: count}\n});\n\nexport const hintShowBest = (game_id, moves) => ({\n  type: GET_HINT_SHOW_BEST,\n  payload: {game_id: game_id, moves: moves}\n});\n\nexport const hintHeatmap = (game_id) => ({\n  type: GET_HINT_HEATMAP,\n  payload: {game_id: game_id}\n});\n\nexport const hintHeatmapZone = (game_id, isQuarter) => ({\n  type: GET_HINT_HEATMAP_ZONE,\n  payload: {game_id: game_id, isQuarter}\n});\n\n\n"]},"metadata":{},"sourceType":"module"}