{"ast":null,"code":"export const HEATMAP_FULL = 13;\nexport const HEATMAP_ZONE_QUARTER = 23;\nconst defaultMapClass = 'redstone';\nconst defaultMapSize = 'size-70';\n\nconst getZone = (rangeAlpha, digitRange, type = 'circle', color = defaultMapClass, size = defaultMapSize) => {\n  let mapStones = {};\n  let classNamesMapStones = {};\n  let alpha = rangeAlpha.toUpperCase().split('');\n  let digits = digitRange.split(',');\n  alpha.map(char => {\n    digits.map(digit => {\n      mapStones[`${char}${digit}`] = type;\n      classNamesMapStones[`${char}${digit}`] = `${size} ${color}`;\n    });\n  });\n  return {\n    mapStones,\n    classNamesMapStones\n  };\n};\n\nexport const MAP_QUARTERS = {\n  '1': getZone('GHJKLMN', '7,8,9,10,11,12,13'),\n  '2': getZone('ABCDEFG', '7,8,9,10,11,12,13'),\n  '3': getZone('ABCDEFG', '1,2,3,4,5,6,7'),\n  '4': getZone('GHJKLMN', '1,2,3,4,5,6,7')\n};\nexport const MAP_HALF = {\n  '1': getZone('ABCDEFGGHJKLMN', '7,8,9,10,11,12,13'),\n  '2': getZone('ABCDEFGGHJKLMN', '1,2,3,4,5,6,7')\n};","map":{"version":3,"sources":["/Users/garinegorgmail.com/Downloads/gohackathon-base-client-instance-master/src/pages/GameBoard/components/Help/types.js"],"names":["HEATMAP_FULL","HEATMAP_ZONE_QUARTER","defaultMapClass","defaultMapSize","getZone","rangeAlpha","digitRange","type","color","size","mapStones","classNamesMapStones","alpha","toUpperCase","split","digits","map","char","digit","MAP_QUARTERS","MAP_HALF"],"mappings":"AAAA,OAAO,MAAMA,YAAY,GAAG,EAArB;AACP,OAAO,MAAMC,oBAAoB,GAAG,EAA7B;AAEP,MAAMC,eAAe,GAAG,UAAxB;AACA,MAAMC,cAAc,GAAG,SAAvB;;AAGA,MAAMC,OAAO,GAAG,CAACC,UAAD,EAAaC,UAAb,EAAyBC,IAAI,GAAG,QAAhC,EAA0CC,KAAK,GAAGN,eAAlD,EAAmEO,IAAI,GAAGN,cAA1E,KAChB;AACE,MAAIO,SAAS,GAAG,EAAhB;AACA,MAAIC,mBAAmB,GAAG,EAA1B;AACA,MAAIC,KAAK,GAAGP,UAAU,CAACQ,WAAX,GAAyBC,KAAzB,CAA+B,EAA/B,CAAZ;AACA,MAAIC,MAAM,GAAGT,UAAU,CAACQ,KAAX,CAAiB,GAAjB,CAAb;AAEAF,EAAAA,KAAK,CAACI,GAAN,CAAWC,IAAD,IAAU;AAClBF,IAAAA,MAAM,CAACC,GAAP,CAAYE,KAAD,IAAW;AACpBR,MAAAA,SAAS,CAAE,GAAEO,IAAK,GAAEC,KAAM,EAAjB,CAAT,GAA+BX,IAA/B;AACAI,MAAAA,mBAAmB,CAAE,GAAEM,IAAK,GAAEC,KAAM,EAAjB,CAAnB,GAA0C,GAAET,IAAK,IAAGD,KAAM,EAA1D;AACD,KAHD;AAID,GALD;AAOA,SAAO;AAACE,IAAAA,SAAD;AAAYC,IAAAA;AAAZ,GAAP;AACD,CAfD;;AAgBA,OAAO,MAAMQ,YAAY,GAAG;AAC1B,OAAKf,OAAO,CAAC,SAAD,EAAY,mBAAZ,CADc;AAE1B,OAAKA,OAAO,CAAC,SAAD,EAAY,mBAAZ,CAFc;AAG1B,OAAKA,OAAO,CAAC,SAAD,EAAY,eAAZ,CAHc;AAI1B,OAAKA,OAAO,CAAC,SAAD,EAAY,eAAZ;AAJc,CAArB;AAOP,OAAO,MAAMgB,QAAQ,GAAG;AACtB,OAAKhB,OAAO,CAAC,gBAAD,EAAmB,mBAAnB,CADU;AAEtB,OAAKA,OAAO,CAAC,gBAAD,EAAmB,eAAnB;AAFU,CAAjB","sourcesContent":["export const HEATMAP_FULL = 13;\nexport const HEATMAP_ZONE_QUARTER = 23\n\nconst defaultMapClass = 'redstone';\nconst defaultMapSize = 'size-70';\n\n\nconst getZone = (rangeAlpha, digitRange, type = 'circle', color = defaultMapClass, size = defaultMapSize) =>\n{\n  let mapStones = {}\n  let classNamesMapStones = {}\n  let alpha = rangeAlpha.toUpperCase().split('')\n  let digits = digitRange.split(',')\n\n  alpha.map((char) => {\n    digits.map((digit) => {\n      mapStones[`${char}${digit}`] = type\n      classNamesMapStones[`${char}${digit}`] = `${size} ${color}`\n    })\n  })\n\n  return {mapStones, classNamesMapStones};\n}\nexport const MAP_QUARTERS = {\n  '1': getZone('GHJKLMN', '7,8,9,10,11,12,13'),\n  '2': getZone('ABCDEFG', '7,8,9,10,11,12,13'),\n  '3': getZone('ABCDEFG', '1,2,3,4,5,6,7'),\n  '4': getZone('GHJKLMN', '1,2,3,4,5,6,7'),\n}\n\nexport const MAP_HALF = {\n  '1': getZone('ABCDEFGGHJKLMN', '7,8,9,10,11,12,13'),\n  '2': getZone('ABCDEFGGHJKLMN', '1,2,3,4,5,6,7'),\n}"]},"metadata":{},"sourceType":"module"}